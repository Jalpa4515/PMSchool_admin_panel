[{"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\index.js":"1","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\ProtectedRoute.js":"2","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\layouts\\Admin.js":"3","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\layouts\\Auth.js":"4","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\AddChallenge.js":"5","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\api\\ApiRequest.js":"6","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\routes.js":"7","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Navbars\\AdminNavbar.js":"8","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Navbars\\AuthNavbar.js":"9","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Footers\\AuthFooter.js":"10","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Sidebar\\Sidebar.js":"11","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Footers\\AdminFooter.js":"12","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\api\\ApiConstants.js":"13","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\api\\ApiParameter.js":"14","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\Index.js":"15","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\AllChallenges.js":"16","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Entries.js":"17","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Changepassword.js":"18","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Forgetpassword.js":"19","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Login.js":"20","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Register.js":"21","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Leaderboard.js":"22","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Tables.js":"23","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\PmRun.js":"24","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\utils\\strings.js":"25","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Headers\\Header.js":"26","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\AuthRequests.js":"27","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\variables\\charts.js":"28","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\utils\\validator.js":"29","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Question\\index.js":"30"},{"size":2162,"mtime":1689939328741,"results":"31","hashOfConfig":"32"},{"size":938,"mtime":1689939328764,"results":"33","hashOfConfig":"32"},{"size":3427,"mtime":1689939333272,"results":"34","hashOfConfig":"32"},{"size":3125,"mtime":1689939333309,"results":"35","hashOfConfig":"32"},{"size":25356,"mtime":1692818918163,"results":"36","hashOfConfig":"32"},{"size":7831,"mtime":1692863981449,"results":"37","hashOfConfig":"32"},{"size":4288,"mtime":1692867361844,"results":"38","hashOfConfig":"32"},{"size":4925,"mtime":1689939333167,"results":"39","hashOfConfig":"32"},{"size":3646,"mtime":1689939333194,"results":"40","hashOfConfig":"32"},{"size":2772,"mtime":1689939333070,"results":"41","hashOfConfig":"32"},{"size":7775,"mtime":1689939333235,"results":"42","hashOfConfig":"32"},{"size":2732,"mtime":1689939333040,"results":"43","hashOfConfig":"32"},{"size":2215,"mtime":1692863955515,"results":"44","hashOfConfig":"32"},{"size":2116,"mtime":1689939328853,"results":"45","hashOfConfig":"32"},{"size":7056,"mtime":1689939333502,"results":"46","hashOfConfig":"32"},{"size":12801,"mtime":1692737698761,"results":"47","hashOfConfig":"32"},{"size":25682,"mtime":1689939333616,"results":"48","hashOfConfig":"32"},{"size":5137,"mtime":1689939333585,"results":"49","hashOfConfig":"32"},{"size":3650,"mtime":1689939333641,"results":"50","hashOfConfig":"32"},{"size":5518,"mtime":1689939333842,"results":"51","hashOfConfig":"32"},{"size":6180,"mtime":1689939333947,"results":"52","hashOfConfig":"32"},{"size":23732,"mtime":1689939333813,"results":"53","hashOfConfig":"32"},{"size":72869,"mtime":1689939333982,"results":"54","hashOfConfig":"32"},{"size":11678,"mtime":1693497922795,"results":"55","hashOfConfig":"32"},{"size":1045,"mtime":1689939333367,"results":"56","hashOfConfig":"32"},{"size":6071,"mtime":1689939333105,"results":"57","hashOfConfig":"32"},{"size":3677,"mtime":1689939333473,"results":"58","hashOfConfig":"32"},{"size":10727,"mtime":1689939333435,"results":"59","hashOfConfig":"32"},{"size":493,"mtime":1689939333389,"results":"60","hashOfConfig":"32"},{"size":7713,"mtime":1693498862038,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"rgwna7",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122","usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"65"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\index.js",["142","143"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"assets/nucleo/css/nucleo.css\";\n// import 'assets/css/test.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/scss/argon-dashboard-react.scss\";\n\nimport AdminLayout from \"layouts/Admin.js\";\nimport AuthLayout from \"layouts/Auth.js\";\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport ProtectedRoute from './ProtectedRoute'\nimport AddChallenge from \"views/pages/AddChallenge.js\";\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <BrowserRouter basename=\"/cms\">\n      <Switch>\n        <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n        <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n        <Route path=\"/viewchallenge/:id\" render={(props) => <AdminLayout {...props} />} />\n        <Route path=\"/entries/:id\" render={(props) => <AdminLayout {...props} />} />\n        <Route path=\"/leaderboard/:id\" render={(props) => <AdminLayout {...props} />} />\n        <Redirect from=\"/\" to=\"/auth\" />\n      </Switch>\n    </BrowserRouter>\n  </AlertProvider>,\n  document.getElementById(\"root\")\n);\n",["144","145"],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\ProtectedRoute.js",["146","147","148","149"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\nclass ProtectedRoute extends React.Component {\n    isAuthenticated = true;\n    componentDidMount() {\n        \n    }\n    render() {\n        const Component = this.props.component;\n        \n        const redirect = !!localStorage.getItem('PMAtoken') ? '/' : this.props.redirect;\n        \n        const uid = localStorage.getItem('PMAuserId');\n        \n        const utoken = localStorage.getItem('PMAtoken');\n        \n        if((uid != '' && uid != undefined)&& (utoken != '' && utoken != undefined)) {\n            console.log('REDIRECTION' , this.props.redirect);\n            return Component ? <Component /> : <Redirect to={{ pathname: '/admin/index' }} />;\n            // return <Redirect to={{ pathname: redirect }} />;\n        } else {\n            \n            return <Redirect to={{ pathname: redirect }} />;\n        }\n    }\n}\n\n\nexport default ProtectedRoute;","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\layouts\\Admin.js",["150"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport ProtectedRoute from '../ProtectedRoute'\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes, mainprops) => {\n    return routes.map((prop, key) => {\n      if (prop.isAppendAdminURl === false) {\n        let Component = prop.component;\n        return (\n          <ProtectedRoute\n            path={prop.path}\n            // component={prop.component}\n            component={() => <Component {...mainprops} isAuthed={true} />}\n            key={key}\n          />\n        );\n      } else\n        if (prop.layout === \"/admin\") {\n\n          let Component = prop.component;\n          return (\n            <ProtectedRoute\n              path={prop.layout + prop.path}\n              // component={prop.component}\n              component={() => <Component {...mainprops} isAuthed={true} />}\n              key={key}\n            />\n          );\n        } else {\n          return null;\n        }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      } else if (routes[i].is_dynamic_path) {\n\n\n        let lastIndex = props.location.pathname.lastIndexOf(\"/\");\n        let page_name = props.location.pathname.substring(1, lastIndex);\n\n\n        if (routes[i].path.indexOf(page_name) !==\n          -1) {\n\n          return routes[i].name;\n        }\n        // return page_name;\n      }\n    }\n    return \"Challenge Details\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/argon-react.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        />\n        <Switch>\n          {getRoutes(routes, props)}\n          <Redirect from=\"*\" to=\"/admin/index\" />\n        </Switch>\n        <Container fluid>\n          <AdminFooter />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\layouts\\Auth.js",["151"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container, Row, Col } from \"reactstrap\";\n\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\n\nimport routes from \"routes.js\";\n\nconst Auth = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.body.classList.add(\"bg-default\");\n    return () => {\n      document.body.classList.remove(\"bg-default\");\n    };\n  }, []);\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"main-content\" ref={mainContent}>\n        <AuthNavbar />\n        <div className=\"header bg-gradient-info py-7 py-lg-8\">\n          <Container>\n            <div className=\"header-body text-center mb-7\">\n              <Row className=\"justify-content-center\">\n                <Col lg=\"5\" md=\"6\">\n                  <h1 className=\"text-white\"></h1>\n                  <p className=\"text-lead text-light\">\n                  </p>\n                </Col>\n              </Row>\n            </div>\n          </Container>\n          <div className=\"separator separator-bottom separator-skew zindex-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"fill-default\"\n                points=\"2560 0 2560 100 0 100\"\n              />\n            </svg>\n          </div>\n        </div>\n        {/* Page content */}\n        <Container className=\"mt--8 pb-5\">\n          <Row className=\"justify-content-center\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/auth/login\" />\n            </Switch>\n          </Row>\n        </Container>\n      </div>\n      <AuthFooter />\n    </>\n  );\n};\n\nexport default Auth;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\AddChallenge.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React from \"react\";\n// import ReactQuill from 'react-quill'; // ES6\nimport { withAlert } from \"react-alert\";\nimport {\n addChallengeRequest,\n getChallengeRequest,\n updateChallengeRequest,\n} from \"../../api/ApiRequest\";\nimport \"../../assets/css/style.css\";\n// reactstrap components\nimport JoditEditor from \"jodit-react\";\nimport { Button, Col, Form, FormGroup, Input, Row } from \"reactstrap\";\nconst config = {\n readonly: false, // all options from https://xdsoft.net/jodit/doc/\n};\nclass AddChallenge extends React.Component {\n file_label = \"Select Image\";\n file_label_logo = \"Select Logo\";\n constructor(props) {\n  super(props);\n  this.handleValueChange = this.handleValueChange.bind(this);\n  this.handleRTEChange = this.handleRTEChange.bind(this);\n  this.handleStartDateTimeChange = this.handleStartDateTimeChange.bind(this);\n  this.handleEndDateTimeChange = this.handleEndDateTimeChange.bind(this);\n  this.changeHeadingData = this.changeHeadingData.bind(this);\n  this.handleCategoryDataChange = this.handleCategoryDataChange.bind(this);\n  this.handleImageChange = this.handleImageChange.bind(this);\n  this.handleLogoChange = this.handleLogoChange.bind(this);\n  this.clearImageInput = this.clearImageInput.bind(this);\n  this.clearLogoInput = this.clearLogoInput.bind(this);\n  this.categories_listing = [\n   { title: \"Structure of document and writing skills\" },\n   { title: \"Design sense and wireframing\" },\n   { title: \"Creative problem solving\" },\n   { title: \"Metrics thinking\" },\n   { title: \"Go-to-market\" },\n   { title: \"Tech understanding\" },\n   { title: \"Market sizing\" },\n  ];\n  this.categoryExist = [];\n  this.state = {\n   is_submit_disabled: false,\n   is_readOnly: false,\n   currentChallengeId: \"\",\n   name: \"\",\n   number: 0,\n   start_date_timestamp: \"\",\n   end_date_timestamp: \"\",\n   points: 0,\n   persona_text: \"\",\n   challenge_text: \"\",\n   type_text: \"\",\n   winners_get_text: \"\",\n   winners_get_text2: \"\",\n   winners_get_text3: \"\",\n   // headings: ['', ''],\n   detail_text: \"\",\n   evaluation_criteria_text: \"\",\n   // categories_listing: [{\"title\" : 'Structure of document and writing skills'},\n   // {\"title\": 'Design sense and wireframing'},\n   // {\"title\": 'Creative problem solving'},\n   // {\"title\": 'Metrics thinking'},\n   // {\"title\": 'Go-to-market'},\n   // {\"title\": 'Tech understanding'},\n   // {\"title\": 'Market sizing'}],\n   // categories_listing: [{}, {}, {}, {}, {}],\n   editImage: false,\n   editLogo: false,\n  };\n }\n setContent = (content) => {\n  this.setState({\n   challenge_text: content,\n  });\n };\n componentDidMount() {\n  // console.clear();\n\n  const {\n   match: { params },\n  } = this.props;\n  if (params && params.id) {\n   // this.state.currentChallengeId = \"609b98635dd574d24fbe3173\";\n   // this.state.currentChallengeId = params.id\n   this.setState({\n    currentChallengeId: params.id,\n   });\n   //\n   this.getChallengeDetails(params.id);\n  }\n }\n\n getChallengeDetails(id) {\n  console.log(\"id: \", id);\n\n  getChallengeRequest(id)\n   .then((response) => {\n    console.log(\"response: \", response);\n\n    if (response.code === 200) {\n     let data = response.data.challenge;\n\n     this.setState({ ...data });\n     if (data.start_date_timestamp) {\n      var tzoffset = new Date().getTimezoneOffset() * 60000; //offset in milliseconds\n      var localISOTime = new Date(data.start_date_timestamp - tzoffset)\n       .toISOString()\n       .slice(0, 16);\n\n      this.setState({\n       start_date_timestamp: localISOTime,\n      });\n     }\n     if (data.end_date_timestamp) {\n      var tzoffset1 = new Date().getTimezoneOffset() * 60000; //offset in milliseconds\n      var localISOTime1 = new Date(data.end_date_timestamp - tzoffset1)\n       .toISOString()\n       .slice(0, 16);\n\n      this.setState({\n       end_date_timestamp: localISOTime1,\n      });\n     }\n     if (data.is_challenge_completed) {\n      this.setState({\n       is_readOnly: true,\n      });\n     }\n\n     for (let i = 0; i < data.categories_listing.length; i++) {\n      let category = data.categories_listing[i];\n      if (category.title == \"Structure of document and writing skills\") {\n       this.setState({ category0: category.out_of_score });\n       this.categories_listing[0][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n      if (category.title == \"Design sense and wireframing\") {\n       this.setState({ category1: category.out_of_score });\n       this.categories_listing[1][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n      if (category.title == \"Creative problem solving\") {\n       this.setState({ category2: category.out_of_score });\n       this.categories_listing[2][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n      if (category.title == \"Metrics thinking\") {\n       this.setState({ category3: category.out_of_score });\n       this.categories_listing[3][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n      if (category.title == \"Go-to-market\") {\n       this.setState({ category4: category.out_of_score });\n       this.categories_listing[4][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n      if (category.title == \"Tech understanding\") {\n       this.setState({ category5: category.out_of_score });\n       this.categories_listing[5][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n      if (category.title == \"Market sizing\") {\n       this.setState({ category6: category.out_of_score });\n       this.categories_listing[6][\"out_of_score\"] = category.out_of_score;\n       this.categoryExist.push(category.title);\n      }\n     }\n     // this.setState({\n     //     is_readOnly: true\n     // })\n\n     // this.props.alert.success(response.msg)\n    } else {\n     // this.props.alert.success(response.msg)\n    }\n   })\n   .catch((e) => {\n    console.log(\"e: \", e);\n\n    // this.props.alert.error(e)\n   });\n }\n\n //value change handled for text and number values\n handleValueChange(event) {\n  let formField = event.target.attributes.fieldname.value;\n  this.setState({ [formField]: event.target.value });\n }\n\n handleRTEChange(eventValue, field_name) {\n  //if the RTE is disabled then save normal text\n  if (eventValue && eventValue.target) {\n   let formField = eventValue.target.attributes.fieldname.value;\n\n   this.setState({ [formField]: eventValue.target.value });\n  } else {\n   this.setState({ [field_name]: eventValue });\n  }\n }\n\n handleStartDateTimeChange(event) {\n  this.setState({ start_date_timestamp: event.target.value });\n }\n\n handleEndDateTimeChange(event) {\n  this.setState({ end_date_timestamp: event.target.value });\n }\n\n changeHeadingData(event, index) {\n  this.state.headings[index] = event.target.value;\n  this.forceUpdate();\n }\n\n submitDataHandler = (event) => {\n  event.preventDefault();\n  let categoryArray = this.categories_listing.filter(function (item) {\n   return (\n    item.out_of_score &&\n    item.out_of_score != \"\" &&\n    item.out_of_score != undefined\n   );\n  });\n  this.setState(\n   {\n    categories_listing: categoryArray,\n   },\n   () => {\n    this.setState({ is_submit_disabled: true });\n    if (this.state.currentChallengeId !== \"\") {\n     this.updateChallenge(this.state);\n    } else {\n     this.addChallenge(this.state);\n    }\n   }\n  );\n\n  // this.addChallenge(this.state)\n };\n\n addChallenge(data) {\n  addChallengeRequest(data)\n   .then((response) => {\n    this.setState({ is_submit_disabled: false });\n    if (response.code === 200) {\n     this.props.alert.success(response.msg);\n    } else {\n     this.props.alert.success(response.msg);\n    }\n    this.props.history.push(\"/admin/all_challenges\");\n   })\n   .catch((e) => {\n    this.setState({ is_submit_disabled: false });\n    this.props.alert.error(e);\n   });\n }\n\n updateChallenge(data) {\n  updateChallengeRequest(data)\n   .then((response) => {\n    this.setState({ is_submit_disabled: false });\n    if (response.code === 200) {\n     this.props.alert.success(response.msg);\n    } else {\n     this.props.alert.success(response.msg);\n    }\n    this.props.history.push(\"/admin/all_challenges\");\n   })\n   .catch((e) => {\n    this.setState({ is_submit_disabled: false });\n    this.props.alert.error(e);\n   });\n }\n\n // validateChallenge(data){\n //     return {\n //         isDataValid : false,\n //         error : 'Name is Missing'\n //     }\n // }\n\n handleCategoryDataChange(event, type, index, title) {\n  let categoryCount = this.categories_listing.filter(function (item) {\n   return (\n    item.out_of_score &&\n    item.out_of_score != \"\" &&\n    item.out_of_score != undefined\n   );\n  }).length;\n\n  if (categoryCount < 5 || this.categoryExist.includes(title)) {\n   this.setState({\n    [type]: event.target.value,\n   });\n   this.categories_listing[index][\"out_of_score\"] = event.target.value;\n   if (\n    event.target.value == \"\" ||\n    event.target.value == undefined ||\n    event.target.value == null\n   ) {\n    const index = this.categoryExist.indexOf(title);\n    if (index > -1) {\n     this.categoryExist.splice(index, 1);\n    }\n   } else {\n    if (!this.categoryExist.includes(title)) this.categoryExist.push(title);\n   }\n  } else {\n   this.setState({\n    [type]: \"\",\n   });\n   this.categories_listing[index][\"out_of_score\"] = \"\";\n  }\n }\n // modules = {\n //     toolbar: [\n //       [{ 'header': [1, 2, false] }],\n //       ['bold', 'italic', 'underline','strike', 'blockquote'],\n //       [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n //       ['link', 'image'],\n //       ['clean']\n //     ],\n //   }\n\n getAllHeadings() {\n  return (\n   <div style={{ display: \"contents\" }}>\n    <Col md=\"12\">\n     <label>Details about the Challenge - Heading</label>\n     <FormGroup>\n      <Input\n       readOnly={this.state.is_readOnly}\n       value={this.state.headings[0]}\n       onChange={(e) => {\n        this.changeHeadingData(e, 0);\n       }}\n       placeholder=\"Heading 1\"\n       type=\"text\"\n      />\n      <small>Minimum 10 characters</small>\n     </FormGroup>\n    </Col>\n    <Col md=\"12\">\n     <label>Details about the Challenge - Body</label>\n     <FormGroup>\n      <Input\n       readOnly={this.state.is_readOnly}\n       value={this.state.headings[1]}\n       onChange={(e) => {\n        this.changeHeadingData(e, 1);\n       }}\n       placeholder=\"Heading 2\"\n       type=\"text\"\n      />\n      <small>Minimum 40 characters</small>\n     </FormGroup>\n    </Col>\n   </div>\n  );\n }\n\n getDynamicCategories() {}\n\n getAllCategoriesListing() {\n  let categories_divs = [];\n\n  for (let index = 0; index < this.categories_listing.length; index++) {\n   categories_divs.push(\n    <Col md=\"6\">\n     <FormGroup>\n      <Input\n       value={this.categories_listing[index][\"title\"]}\n       readOnly={true}\n       placeholder={\"Category \" + (index + 1)}\n       onChange={(e) => this.handleCategoryDataChange(e, \"heading\", index)}\n       type=\"text\"\n      />\n     </FormGroup>\n    </Col>\n   );\n   categories_divs.push(\n    <Col md=\"6\">\n     <FormGroup>\n      <Input\n       value={this.state[\"category\" + index]}\n       readOnly={this.state.is_readOnly}\n       min=\"0\"\n       max=\"100\"\n       placeholder={\"Score \" + (index + 1)}\n       onChange={(e) =>\n        this.handleCategoryDataChange(\n         e,\n         \"category\" + index,\n         index,\n         this.categories_listing[index][\"title\"]\n        )\n       }\n       type=\"number\"\n      />\n     </FormGroup>\n    </Col>\n   );\n  }\n  return (\n   <div style={{ display: \"contents\" }}>\n    <br></br>\n    {categories_divs}\n   </div>\n  );\n }\n\n modules = {\n  toolbar: false,\n };\n\n getBase64 = (file) => {\n  return new Promise((resolve) => {\n   let fileInfo;\n   let baseURL = \"\";\n   // Make new FileReader\n   let reader = new FileReader();\n\n   // Convert the file to base64 text\n   reader.readAsDataURL(file);\n\n   // on reader load somthing...\n   reader.onload = () => {\n    // Make a fileInfo Object\n    baseURL = reader.result;\n    resolve(baseURL);\n   };\n  });\n };\n\n handleImageChange(event) {\n  let file = event.target.files[0];\n\n  if (file) {\n   this.file_label = file[\"name\"];\n   this.getBase64(file)\n    .then((result) => {\n     this.setState({\n      image: result,\n      file: file,\n     });\n     if (this.state.currentChallengeId) {\n      this.setState({\n       editImage: true,\n      });\n     }\n    })\n    .catch((err) => {});\n  }\n }\n\n handleLogoChange(event) {\n  let file = event.target.files[0];\n\n  if (file) {\n   this.file_label_logo = file[\"name\"];\n   this.getBase64(file)\n    .then((result) => {\n     this.setState({\n      logo: result,\n      fileLogo: file,\n     });\n     if (this.state.currentChallengeId) {\n      this.setState({\n       editLogo: true,\n      });\n     }\n    })\n    .catch((err) => {});\n  }\n }\n\n // getChallengeImage(){\n //     if(this.state.image) {\n //\n //         return(\n //             <div>\n //                 <img className=\"challenge_details_image\" src={\"https://pmschool.io:4000/\"+this.state.image} />\n //             </div>\n //         )\n //     } else {\n //         return null;\n //     }\n\n // }\n\n clearImageInput(event) {\n  this.file_label = \"Select Image\";\n  this.setState({\n   image: \"\",\n   file: {},\n  });\n }\n\n clearLogoInput(event) {\n  this.file_label_logo = \"Select Logo\";\n  this.setState({\n   imageLogo: \"\",\n   fileLogo: {},\n  });\n }\n render() {\n  // const alert = this.props.alert;\n  return (\n   <>\n    {<div className=\"header bg-gradient-info pb-2 pt-2 pt-md-8\"></div>}\n    {\n     <div style={{ padding: \"2rem\" }} className=\"form-header-div\">\n      <Form onSubmit={this.submitDataHandler}>\n       <Row>\n        <Col md=\"8\">\n         <FormGroup>\n          <label>Challenge Name</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           placeholder=\"Name\"\n           type=\"text\"\n           fieldname=\"name\"\n           value={this.state.name}\n           onChange={this.handleValueChange}\n          />\n          <small>Minimum 30 characters</small>\n         </FormGroup>\n        </Col>\n        <Col md=\"4\">\n         <FormGroup>\n          <label>Challenge Number</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           fieldname=\"number\"\n           value={this.state.number}\n           onChange={this.handleValueChange}\n           placeholder=\"Number\"\n           type=\"number\"\n          />\n         </FormGroup>\n        </Col>\n        <Col md=\"4\">\n         <FormGroup>\n          <label>Upload Image</label>\n          <div className=\"custom-file\">\n           <input\n            disabled={this.state.is_readOnly}\n            onChange={this.handleImageChange}\n            type=\"file\"\n            className=\"custom-file-input\"\n            lang=\"en\"\n           />\n           <label className=\"custom-file-label\">{this.file_label}</label>\n           {!this.state.is_readOnly && (\n            <i\n             onClick={this.clearImageInput}\n             className=\"ni ni-fat-delete delete-file-icon\"\n            />\n           )}\n          </div>\n          <small>Min size 100 * 100 px</small>\n          <br></br>\n          <small>Max 1 MB</small>\n          {this.state.is_readOnly && (\n           <div>\n            <img className=\"challenge_details_image\" src={this.state.image} />\n           </div>\n          )}\n         </FormGroup>\n        </Col>\n\n        <Col md=\"4\">\n         <FormGroup>\n          <label>Upload Logo</label>\n          <div className=\"custom-file\">\n           <input\n            disabled={this.state.is_readOnly}\n            onChange={this.handleLogoChange}\n            type=\"file\"\n            id=\"avatar\"\n            name=\"avatar\"\n            className=\"custom-file-input\"\n            lang=\"en\"\n           />\n           <label className=\"custom-file-label\">{this.file_label_logo}</label>\n           {!this.state.is_readOnly && (\n            <i\n             onClick={this.clearLogoInput}\n             className=\"ni ni-fat-delete delete-file-icon\"\n            />\n           )}\n          </div>\n          {/* <small>Min size 100 * 100 px</small> */}\n          <br></br>\n          <small>Max 1 MB</small>\n          {this.state.is_readOnly && (\n           <div>\n            <img className=\"challenge_details_image\" src={this.state.logo} />\n           </div>\n          )}\n         </FormGroup>\n        </Col>\n\n        <Col md=\"4\">\n         {/* <FormGroup>\n                                    <label>Start Date</label>\n                                    <Input placeholder=\"\" fieldname=\"start_date_timestamp\" type=\"date\" />\n                                </FormGroup> */}\n         <div className=\"form-group\">\n          <label className=\"form-control-label\">Start Date</label>\n          <input\n           onKeyDown={(e) => e.preventDefault()}\n           readOnly={this.state.is_readOnly}\n           fieldname=\"start_date_timestamp\"\n           onChange={this.handleStartDateTimeChange}\n           className=\"form-control\"\n           type=\"datetime-local\"\n           value={this.state.start_date_timestamp}\n          />\n         </div>\n        </Col>\n        <Col md=\"4\">\n         {/* <FormGroup>\n                                    <label>End Date</label>\n                                    <Input placeholder=\"\" fieldname=\"end_date_timestamp\" type=\"date\" />\n                                </FormGroup> */}\n         <div className=\"form-group\">\n          <label className=\"form-control-label\">End Date (Deadline)</label>\n          <input\n           onKeyDown={(e) => e.preventDefault()}\n           readOnly={this.state.is_readOnly}\n           fieldname=\"end_date_timestamp\"\n           onChange={this.handleEndDateTimeChange}\n           className=\"form-control\"\n           type=\"datetime-local\"\n           value={this.state.end_date_timestamp}\n          />\n         </div>\n        </Col>\n\n        <Col md=\"12\">\n         <FormGroup>\n          <label>You are?</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.persona_text}\n           fieldname=\"persona_text\"\n           onChange={(value) => this.handleRTEChange(value, \"persona_text\")}\n          />\n          <small>Minimum 20 characters</small>\n         </FormGroup>\n        </Col>\n\n        <Col md=\"12\">\n         <FormGroup>\n          <label>The Challenge is?</label>\n          <JoditEditor\n           // ref={editor}\n           value={this.state.challenge_text}\n           config={{ readOnly: this.state.is_readOnly }}\n           tabIndex={5} // tabIndex of textarea\n           onBlur={(newContent) => this.setContent(newContent)} // preferred to use only this option to update the content for performance reasons\n           // onChange={newContent => { }}\n          />\n          <small>Minimum 400 characters</small>\n         </FormGroup>\n        </Col>\n\n        <Col md=\"12\">\n         <FormGroup>\n          <label>Short Challenge Description</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.short_challenge_description}\n           fieldname=\"short_challenge_description\"\n           onChange={(value) =>\n            this.handleRTEChange(value, \"short_challenge_description\")\n           }\n          />\n          <small>Maximum 100 characters</small>\n         </FormGroup>\n        </Col>\n\n        <Col md=\"12\">\n         <FormGroup>\n          <label>Type</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.type_text}\n           fieldname=\"type_text\"\n           onChange={(value) => this.handleRTEChange(value, \"type_text\")}\n          />\n          <small>Minimum 5 characters</small>\n         </FormGroup>\n        </Col>\n\n        <Col md=\"12\">\n         <FormGroup>\n          <label>First Winner Get</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.winners_get_text}\n           fieldname=\"winners_get_text\"\n           onChange={(value) => this.handleRTEChange(value, \"winners_get_text\")}\n          />\n          <small>Minimum 40 characters</small>\n         </FormGroup>\n        </Col>\n        <Col md=\"12\">\n         <FormGroup>\n          <label>Second Winner Get</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.winners_get_text2}\n           fieldname=\"winners_get_text2\"\n           onChange={(value) =>\n            this.handleRTEChange(value, \"winners_get_text2\")\n           }\n          />\n          <small>Minimum 40 characters</small>\n         </FormGroup>\n        </Col>\n        <Col md=\"12\">\n         <FormGroup>\n          <label>Third Winner Get</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.winners_get_text3}\n           fieldname=\"winners_get_text3\"\n           onChange={(value) =>\n            this.handleRTEChange(value, \"winners_get_text3\")\n           }\n          />\n          <small>Minimum 40 characters</small>\n         </FormGroup>\n        </Col>\n\n        <br></br>\n\n        {/* {this.getAllHeadings()} */}\n        <Col md=\"12\">\n         <FormGroup>\n          <label>You as a PM are responsible for</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.detail_text}\n           fieldname=\"detail_text\"\n           onChange={(value) => this.handleRTEChange(value, \"detail_text\")}\n          />\n          <small>Minimum 10 characters</small>\n         </FormGroup>\n        </Col>\n\n        <br></br>\n        <Col md=\"4\">\n         <FormGroup>\n          <label>Points</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           value={this.state.points}\n           fieldname=\"points\"\n           placeholder=\"Number\"\n           min=\"0\"\n           max=\"100\"\n           type=\"number\"\n           onChange={this.handleValueChange}\n          />\n         </FormGroup>\n        </Col>\n        <Col md=\"12\">\n         <FormGroup>\n          <label>Evaluation Criteria</label>\n          <Input\n           readOnly={this.state.is_readOnly}\n           modules={this.modules}\n           value={this.state.evaluation_criteria_text}\n           fieldname=\"evaluation_criteria_text\"\n           onChange={(value) =>\n            this.handleRTEChange(value, \"evaluation_criteria_text\")\n           }\n          />\n          <small>Minimum 10 characters</small>\n         </FormGroup>\n        </Col>\n        {this.getAllCategoriesListing()}\n        {!this.state.is_readOnly && (\n         <Button\n          disabled={this.state.is_submit_disabled}\n          className=\"my-4\"\n          style={{ margin: \"0 auto\" }}\n          color=\"primary\"\n          type=\"submit\">\n          Save\n         </Button>\n        )}\n       </Row>\n       {/* \n                            <Col md=\"6\">\n                                <FormGroup>\n                                    <InputGroup className=\"mb-4\">\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <i className=\"ni ni-zoom-split-in\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input placeholder=\"Search\" type=\"text\" />\n                                    </InputGroup>\n                                </FormGroup>\n                            </Col>\n                            <Col md=\"6\">\n                                <FormGroup>\n                                    <InputGroup className=\"mb-4\">\n                                        <Input placeholder=\"Birthday\" type=\"text\" />\n                                        <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText>\n                                                <i className=\"ni ni-zoom-split-in\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                            </Col>\n                        \n                        \n                            <Col md=\"6\">\n                                <FormGroup className=\"has-success\">\n                                    <Input\n                                        className=\"is-valid\"\n                                        placeholder=\"Success\"\n                                        type=\"text\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col md=\"6\">\n                                <FormGroup className=\"has-danger\">\n                                    <Input\n                                        className=\"is-invalid\"\n                                        placeholder=\"Error Input\"\n                                        type=\"email\"\n                                    />\n                                </FormGroup>\n                            </Col>\n                        \n                     */}\n      </Form>\n     </div>\n    }\n   </>\n  );\n }\n}\n\n// export default AddChallenge;\nexport default withAlert()(AddChallenge);\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\api\\ApiRequest.js",["170","171","172","173","174"],"import {\n ADDCHALLENGE,\n ADDCONFIGDATE,\n ADDQUESTION,\n AUTORANK,\n BASE_URL_API,\n CHANGEPASSWORD,\n DELETECHALLENGE,\n EXPORTLEADERBOARD,\n EXPORTUSER,\n FORGOTPASSWORD,\n GETALLCHALLENGES,\n GETCATEGORIES,\n GETCHALLENGE,\n GETCHALLENGEENTRIES,\n GETCONFIGDATE,\n GETENROLMENTREPORT,\n GETLEADERBOARD,\n GETQUESTIONS,\n GETSTATISTICS,\n LOGIN,\n LOGOUT,\n SIGNUP,\n SUBMITTOLIVE,\n UPDATECHALLENGE,\n UPDATELEADERBOARD,\n UPDATEQUESTION,\n UPDATERANK,\n} from \"./ApiConstants\";\nimport {\n getChangePasswordParameterMap,\n getForgotPasswordParameterMap,\n getHeaders,\n getLoginParameterMap,\n getSignUpParameterMap,\n} from \"./ApiParameter\";\n\nimport axios from \"axios\";\nconst FileDownload = require(\"js-file-download\");\n\nconst API_TIMEOUT = 10000;\nconst TIMEOUT = 9000;\n\nconst instance = axios.create({\n baseURL: BASE_URL_API,\n timeout: API_TIMEOUT,\n headers: {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Headers\",\n  \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n },\n});\n\nconst rawinstance = axios.create({\n baseURL: BASE_URL_API,\n timeout: API_TIMEOUT,\n headers: {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Headers\": \"Access-Control-Allow-Headers\",\n  \"Content-Type\": \"application/json\",\n },\n});\n\nconst getFormUrlEncodedBody = (body) => {\n var formBody = [];\n for (var property in body) {\n  var encodedKey = encodeURIComponent(property);\n  var encodedValue = encodeURIComponent(body[property]);\n  formBody.push(encodedKey + \"=\" + encodedValue);\n }\n formBody = formBody.join(\"&\");\n return formBody;\n};\n\nconst parse = (res, resolve, reject) => {\n if (res && res.data) {\n  const response = res.data;\n  if (response.code === 200 || response.code === 202) {\n   resolve(response);\n  } else {\n   if (response.msg_type && response.msg_type != \"\") {\n    if (response.msg_type == \"LOCATION_NOT_ALLOWED\")\n     reject(\n      \"Due to licensing constraints, we are currently unable to allow streaming outside of the United States. We are working to remedy this and appreciate your patience!\"\n     );\n    else reject(response.msg_type);\n   } else if (response.msg && response.msg != \"\") {\n    reject(response.msg);\n   } else {\n    reject(\"Server Error\");\n   }\n  }\n } else {\n  reject(\"No response\");\n }\n};\n\nconst postCall = (url, body, config) => {\n return Promise.race([\n  new Promise((resolve, reject) => {\n   instance\n    .post(url, body, config)\n    .then((response) => {\n     parse(response, resolve, reject);\n    })\n    .catch((error) => {});\n  }),\n  new Promise((_, reject) =>\n   setTimeout(() => reject(\"Timeout exceeded\"), TIMEOUT)\n  ),\n ]);\n};\n\nconst postRawCall = (url, body, config) => {\n return Promise.race([\n  new Promise((resolve, reject) => {\n   rawinstance\n    .post(url, body, config)\n    .then((response) => {\n     parse(response, resolve, reject);\n    })\n    .catch((error) => {});\n  }),\n  new Promise((_, reject) =>\n   setTimeout(() => reject(\"Timeout exceeded\"), TIMEOUT)\n  ),\n ]);\n};\n\nconst postCallDownload = (url, body, config) => {\n return Promise.race([\n  new Promise((resolve, reject) => {\n   instance\n    .post(url, body, config)\n    .then((response) => {\n     //\n     if (response.data.code) {\n      parse(response, resolve, reject);\n     } else {\n      FileDownload(response.data, \"report.csv\");\n     }\n    })\n    .catch((error) => {});\n  }),\n  new Promise((_, reject) =>\n   setTimeout(() => reject(\"Timeout exceeded\"), TIMEOUT)\n  ),\n ]);\n};\n\nconst putCall = (url, body, config) => {\n return Promise.race([\n  new Promise((resolve, reject) => {\n   instance\n    .put(url, body, config)\n    .then((response) => {\n     parse(response, resolve, reject);\n    })\n    .catch((error) => {});\n  }),\n  new Promise((_, reject) =>\n   setTimeout(() => reject(\"Timeout exceeded\"), TIMEOUT)\n  ),\n ]);\n};\n\nconst deleteCall = (url, config) => {\n return Promise.race([\n  new Promise((resolve, reject) => {\n   instance\n    .delete(url, config)\n    .then((response) => {\n     parse(response, resolve, reject);\n    })\n    .catch((error) => {});\n  }),\n  new Promise((_, reject) =>\n   setTimeout(() => reject(\"Timeout exceeded\"), TIMEOUT)\n  ),\n ]);\n};\n\nconst getCall = (url, body) => {\n return Promise.race([\n  new Promise((resolve, reject) => {\n   instance\n    .get(url, body)\n    .then((response) => {\n     parse(response, resolve, reject);\n    })\n    .catch((error) => {});\n  }),\n  new Promise((_, reject) =>\n   setTimeout(() => reject(\"Timeout exceeded\"), TIMEOUT)\n  ),\n ]);\n};\n\nexport function signupRequest(email, password, name) {\n return postCall(\n  SIGNUP,\n  getFormUrlEncodedBody(getSignUpParameterMap(email, password, name))\n );\n}\n\nexport function loginRequest(\n email,\n password,\n device_os,\n device_os_version,\n device_token,\n device_name\n) {\n return postCall(\n  LOGIN,\n  getFormUrlEncodedBody(\n   getLoginParameterMap(\n    email,\n    password,\n    device_os,\n    device_os_version,\n    device_token,\n    device_name\n   )\n  )\n );\n}\nexport function logoutRequest(device_token) {\n return postCall(LOGOUT, getFormUrlEncodedBody({ device_token }), {\n  ...getHeaders(),\n });\n}\n\nexport function forgotPasswordRequest(email) {\n return postCall(\n  FORGOTPASSWORD,\n  getFormUrlEncodedBody(getForgotPasswordParameterMap(email))\n );\n}\n\nexport function changePasswordRequest(email, oldpassword, newpassword) {\n return postCall(\n  CHANGEPASSWORD,\n  getFormUrlEncodedBody(\n   getChangePasswordParameterMap(email, oldpassword, newpassword)\n  ),\n  {\n   ...getHeaders(),\n  }\n );\n}\n\nexport function addChallengeRequest(data) {\n return postRawCall(ADDCHALLENGE, data, {\n  ...getHeaders(),\n });\n}\n\nexport function updateChallengeRequest(data) {\n return postRawCall(UPDATECHALLENGE, data, {\n  ...getHeaders(),\n });\n}\n\nexport function getChallengeRequest(id) {\n return getCall(GETCHALLENGE, {\n  ...getHeaders(),\n  params: {\n   challenge_id: id,\n  },\n });\n}\n\nexport function deleteChallengeRequest(id) {\n return deleteCall(DELETECHALLENGE, {\n  ...getHeaders(),\n  params: {\n   challenge_id: id,\n  },\n });\n}\n\nexport function getAllChallengesRequest(data) {\n return getCall(GETALLCHALLENGES, {\n  ...getHeaders(),\n  params: data,\n });\n}\n\nexport function getChallengeEntriesRequest(data) {\n return getCall(GETCHALLENGEENTRIES, {\n  ...getHeaders(),\n  params: data,\n });\n}\n\nexport function getLeaderboardRequest(data) {\n return getCall(GETLEADERBOARD, {\n  ...getHeaders(),\n  params: data,\n });\n}\n\nexport function updateRankRequest(data) {\n return postRawCall(UPDATERANK, data, {\n  ...getHeaders(),\n });\n}\n\nexport function updateLeaderBoard(data) {\n return postRawCall(UPDATELEADERBOARD, data, {\n  ...getHeaders(),\n });\n}\n\nexport function submitToLiveRequest(data) {\n return postRawCall(SUBMITTOLIVE, data, {\n  ...getHeaders(),\n });\n}\n\nexport function addConfigDate(data) {\n return postRawCall(ADDCONFIGDATE, data, {\n  ...getHeaders(),\n });\n}\n\nexport function getConfigDate(id) {\n return getCall(GETCONFIGDATE, {\n  ...getHeaders(),\n });\n}\n\nexport function exportUser(data) {\n return postRawCall(EXPORTUSER, data, {\n  ...getHeaders(),\n });\n}\n\nexport function autoRankRequest(data) {\n return postRawCall(AUTORANK, data, {\n  ...getHeaders(),\n });\n}\n\nexport function exportLeaderboard(data) {\n return postRawCall(EXPORTLEADERBOARD, data, {\n  ...getHeaders(),\n });\n}\n\nexport function getQuestions() {\n return getCall(GETQUESTIONS, {\n  ...getHeaders(),\n });\n}\n\nexport function getCategories() {\n return getCall(GETCATEGORIES, {\n  ...getHeaders(),\n });\n}\n\nexport function addQuestion(data) {\n return postRawCall(ADDQUESTION, {\n  ...getHeaders(),\n  ...data,\n });\n}\n\nexport function updateQuestion(data) {\n return postRawCall(UPDATEQUESTION, {\n  ...getHeaders(),\n  ...data,\n });\n}\n\nexport function getStatistics(data) {\n return postRawCall(GETSTATISTICS, {\n  ...getHeaders(),\n  ...data,\n });\n}\n\nexport function getEnrolmentReport() {\n return postRawCall(GETENROLMENTREPORT, {\n  ...getHeaders(),\n });\n}\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\routes.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Navbars\\AdminNavbar.js",["175","176","177","178","179","180"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  NavbarBrand,\n  Media,\n} from \"reactstrap\";\n\nconst AdminNavbar = (props) => {\n\n\n  const logOutHandler = (e) => {\n    e.preventDefault();\n    console.log('Logging Out');\n    localStorage.clear();\n    window.location.reload();\n  }\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-dark\" expand=\"md\" id=\"navbar-main\">\n        <Container fluid>\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={\n                require(\"../../assets/img/brand/pm_logo.svg\").default\n              }\n            />\n          </NavbarBrand>\n          <Link\n            className=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block\"\n            to=\"#\"\n            style={{\"fontSize\": \"1.5rem\"}}\n          >\n            {props.brandText}\n          </Link>\n          {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n            <FormGroup className=\"mb-0\">\n              <InputGroup className=\"input-group-alternative\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i className=\"fas fa-search\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder=\"Search\" type=\"text\" />\n              </InputGroup>\n            </FormGroup>\n          </Form> */}\n          <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n            <UncontrolledDropdown nav>\n              <DropdownToggle className=\"pr-0\" nav>\n                <Media className=\"align-items-center\">\n                  <span className=\"avatar avatar-sm rounded-circle\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/theme/team-4-800x800.jpg\")\n                          .default\n                      }\n                    />\n                  </span>\n                  <Media className=\"ml-2 d-none d-lg-block\">\n                    <span className=\"mb-0 text-sm font-weight-bold\">\n                      PMSCHOOL Admin\n                    </span>\n                  </Media>\n                </Media>\n              </DropdownToggle>\n              <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                <DropdownItem className=\"noti-title\" header tag=\"div\">\n                  <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                </DropdownItem>\n                {/* <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-single-02\" />\n                  <span>My profile</span>\n                </DropdownItem> */}\n                {/* <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-settings-gear-65\" />\n                  <span>Settings</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-calendar-grid-58\" />\n                  <span>Activity</span>\n                </DropdownItem>\n                <DropdownItem to=\"/admin/user-profile\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Support</span>\n                </DropdownItem> */}\n                <DropdownItem to=\"/auth/register\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Register Admin</span>\n                </DropdownItem>\n                <DropdownItem to=\"/auth/change_passwword\" tag={Link}>\n                  <i className=\"ni ni-support-16\" />\n                  <span>Change Password</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem href=\"#pablo\" onClick={logOutHandler}>\n                  <i className=\"ni ni-user-run\" />\n                  <span>Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Navbars\\AuthNavbar.js",["181","182","183"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n  UncontrolledCollapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nconst AdminNavbar = () => {\n  return (\n    <>\n      <Navbar className=\"navbar-top navbar-horizontal navbar-dark\" expand=\"md\">\n        <Container className=\"px-4\">\n          <NavbarBrand to=\"/\" tag={Link}>\n            <img\n              alt=\"...\"\n              src={\n                require(\"../../assets/img/brand/pm_logo.svg\").default\n              }\n            />\n          </NavbarBrand>\n          <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                <Col className=\"collapse-brand\" xs=\"6\">\n                  <Link to=\"/\">\n                    <img\n                      alt=\"...\"\n                      src={\n                        require(\"../../assets/img/brand/argon-react.png\")\n                          .default\n                      }\n                    />\n                  </Link>\n                </Col>\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            {/* <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/\" tag={Link}>\n                  <i className=\"ni ni-planet\" />\n                  <span className=\"nav-link-inner--text\">Dashboard</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className=\"nav-link-icon\"\n                  to=\"/auth/register\"\n                  tag={Link}\n                >\n                  <i className=\"ni ni-circle-08\" />\n                  <span className=\"nav-link-inner--text\">Register</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link-icon\" to=\"/auth/login\" tag={Link}>\n                  <i className=\"ni ni-key-25\" />\n                  <span className=\"nav-link-inner--text\">Login</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className=\"nav-link-icon\"\n                  to=\"/admin/user-profile\"\n                  tag={Link}\n                >\n                  <i className=\"ni ni-single-02\" />\n                  <span className=\"nav-link-inner--text\">Profile</span>\n                </NavLink>\n              </NavItem>\n            </Nav> */}\n          </UncontrolledCollapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default AdminNavbar;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Footers\\AuthFooter.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Footers\\AdminFooter.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\api\\ApiConstants.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\api\\ApiParameter.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\Index.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState, useEffect } from \"react\";\n// node.js library that concatenates classes (strings)\nimport classnames from \"classnames\";\n// javascipt plugin for creating charts\nimport Chart from \"chart.js\";\n\nimport { withAlert } from 'react-alert'\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport {\n  addConfigDate,\n  getConfigDate,\n  exportUser\n} from '../api/ApiRequest';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Form,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1,\n  chartExample2,\n} from \"variables/charts.js\";\n\nimport Header from \"components/Headers/Header.js\";\nimport { setSyntheticLeadingComments } from \"typescript\";\n\nconst Index = (props) => {\n  const reactAlert = withAlert()\n  const [activeNav, setActiveNav] = useState(1);\n  const [chartExample1Data, setChartExample1Data] = useState(\"data1\");\n  const [cohortDate, setCohortDate] = useState(\"\");\n  const [submitDisable, setSubmitDisable] = useState(false);\n  const [fileLink, setFileLink] = useState(\"\");\n\n  if (window.Chart) {\n    parseOptions(Chart, chartOptions());\n  }\n\n  const toggleNavs = (e, index) => {\n    e.preventDefault();\n    setActiveNav(index);\n    setChartExample1Data(\"data\" + index);\n  };\n  const submitDataHandler = event => {\n    event.preventDefault();\n    setSubmitDisable(true)\n    addConfig()\n  }\n  const addConfig = () => {\n    let request = {}\n    request.cohortDate = cohortDate\n    addConfigDate(request)\n      .then((response) => {\n        setSubmitDisable(false)\n        if (response.code === 200) {\n          props.alert.success(response.msg)\n        } else {\n          props.alert.success(response.msg)\n        }\n      })\n      .catch((e) => {\n        setSubmitDisable(false)\n      });\n  }\n\n  const getConfig = () => {\n    getConfigDate()\n      .then((response) => {\n        if (response.code === 200) {\n          let data = response.data;\n          if (data.cohortDate) {\n            var tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\n            var localISOTime = (new Date(data.cohortDate - tzoffset)).toISOString().slice(0, 16);\n            setCohortDate(localISOTime)\n          }\n        }\n      })\n      .catch((e) => {\n        console.log('e: ', e);\n      });\n  }\n\n  useEffect(() => {\n    getConfig()\n  }, []);\n  const handleConfigDate = (event) => {\n    setCohortDate(event.target.value)\n  }\n  const clickExport = () => {\n    exportUser()\n    .then((response) => {\n      if (response.code === 200) {\n        if(response.data){\n          let a = document.createElement('a');\n          a.href = response.data\n          a.click();\n          props.alert.success(\"SUCCESS\")\n        } else {\n          props.alert.success(\"NO_DATA_FOUND\")\n        }\n      } else {\n        props.alert.success(\"NO_DATA_FOUND\")\n      }\n    })\n    .catch((e) => {\n      console.log(\"response e\", e)\n    });\n  }\n  return (\n    <>\n      <Header />\n      {/* Page content */}\n      {/* <Container className=\"mt--7\" fluid> */}\n      {<div style={{ padding: \"2rem\" }} className=\"form-header-div\">\n        <Form onSubmit={submitDataHandler}>\n          <Row>\n          <Col md=\"4\">\n            <div className=\"form-group\">\n              <label className=\"form-control-label\">Select Cohort Date</label>\n              <input onKeyDown={(e) => e.preventDefault()} fieldname=\"mainDate\" onChange={handleConfigDate} className=\"form-control\" type=\"datetime-local\" value={cohortDate} />\n            </div>\n          </Col>\n          <Col md=\"4\" style={{marginTop : '7px'}}>\n          <Button disabled={submitDisable} className=\"my-4\" style={{ margin: \"0 auto\" }} color=\"primary\" type=\"submit\">\n            Save Date\n          </Button>\n          </Col>\n          </Row>\n          <Row>\n          <Col md=\"4\">\n            <Button className=\"my-4\" style={{ margin: \"0 auto\" }} color=\"primary\" onClick={clickExport}>\n              Export User Data\n            </Button>\n          </Col>\n          </Row>\n        </Form>\n\n      </div>}\n      {/* <Row>\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n            <Card className=\"bg-gradient-default shadow\">\n              <CardHeader className=\"bg-transparent\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                      Overview\n                    </h6>\n                    <h2 className=\"text-white mb-0\">Sales value</h2>\n                  </div>\n                  <div className=\"col\">\n                    <Nav className=\"justify-content-end\" pills>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 1,\n                          })}\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 1)}\n                        >\n                          <span className=\"d-none d-md-block\">Month</span>\n                          <span className=\"d-md-none\">M</span>\n                        </NavLink>\n                      </NavItem>\n                      <NavItem>\n                        <NavLink\n                          className={classnames(\"py-2 px-3\", {\n                            active: activeNav === 2,\n                          })}\n                          data-toggle=\"tab\"\n                          href=\"#pablo\"\n                          onClick={(e) => toggleNavs(e, 2)}\n                        >\n                          <span className=\"d-none d-md-block\">Week</span>\n                          <span className=\"d-md-none\">W</span>\n                        </NavLink>\n                      </NavItem>\n                    </Nav>\n                  </div>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart\">\n                  <Line\n                    data={chartExample1[chartExample1Data]}\n                    options={chartExample1.options}\n                    getDatasetAtEvent={(e) => console.log(e)}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row> */}\n      {/* </Container> */}\n    </>\n  );\n};\n\nexport default withAlert()(Index);\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\AllChallenges.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { withAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\nimport {\n deleteChallengeRequest,\n getAllChallengesRequest,\n} from \"../../api/ApiRequest\";\nimport \"../../assets/css/style.css\";\n// reactstrap components\nimport {\n Badge,\n Card,\n CardFooter,\n CardHeader,\n Col,\n Container,\n DropdownItem,\n DropdownMenu,\n DropdownToggle,\n Input,\n Pagination,\n PaginationItem,\n PaginationLink,\n Row,\n Table,\n UncontrolledDropdown,\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass AllChallenges extends React.Component {\n constructor(props) {\n  //\n\n  super(props);\n  this.state = {\n   number_of_pages: 1,\n   search_key: \"\",\n   page: 1,\n   limit: 10,\n   sort_by: \"created_timestamp\",\n   sort_order: -1,\n   challenges_listing: [],\n   filter_type: \"all\",\n  };\n  this.deleteChallenge = this.deleteChallenge.bind(this);\n  this.changePagination = this.changePagination.bind(this);\n }\n componentDidMount() {\n  this.getAllChallenges();\n }\n\n getAllChallenges() {\n  getAllChallengesRequest({\n   number_of_pages: this.state.number_of_pages,\n   search_key: this.state.search_key,\n   page: this.state.page,\n   limit: this.state.limit,\n   sort_by: this.state.sort_by,\n   sort_order: this.state.sort_order,\n   filter_type: this.state.filter_type,\n  })\n   .then((response) => {\n    if (response.code == 200) {\n     let data = response.data;\n     let number_of_pages = Math.ceil(response.totalCount / response.limit);\n     if (number_of_pages == 0) number_of_pages = 1;\n     this.setState({\n      challenges_listing: response.data,\n      number_of_pages: number_of_pages,\n     });\n    } else {\n     this.props.alert.success(response.msg);\n    }\n   })\n   .catch((e) => {\n    this.props.alert.error(e);\n   });\n }\n\n getTableHeadings() {\n  return (\n   <thead className=\"thead-light\">\n    <tr>\n     <th scope=\"col\">\n      No.{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"number\";\n        this.state.sort_order = 1;\n        this.getAllChallenges();\n       }}\n       className={\"ni ni-bold-up \"}\n       style={\n        this.state.sort_by == \"number\" && this.state.sort_order == 1\n         ? { color: \"blue\" }\n         : {}\n       }></i>{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"number\";\n        this.state.sort_order = -1;\n        this.getAllChallenges();\n       }}\n       className=\"ni ni-bold-down\"\n       style={\n        this.state.sort_by == \"number\" && this.state.sort_order == -1\n         ? { color: \"blue\" }\n         : {}\n       }></i>{\" \"}\n     </th>\n     <th scope=\"col\">\n      Name{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"name\";\n        this.state.sort_order = 1;\n        this.getAllChallenges();\n       }}\n       className={\"ni ni-bold-up \"}\n       style={\n        this.state.sort_by == \"name\" && this.state.sort_order == 1\n         ? { color: \"blue\" }\n         : {}\n       }></i>{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"name\";\n        this.state.sort_order = -1;\n        this.getAllChallenges();\n       }}\n       className=\"ni ni-bold-down\"\n       style={\n        this.state.sort_by == \"name\" && this.state.sort_order == -1\n         ? { color: \"blue\" }\n         : {}\n       }></i>\n     </th>\n     <th scope=\"col\">Entries</th>\n     <th scope=\"col\">\n      Start Date{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"start_date_timestamp\";\n        this.state.sort_order = 1;\n        this.getAllChallenges();\n       }}\n       className={\"ni ni-bold-up \"}\n       style={\n        this.state.sort_by == \"start_date_timestamp\" &&\n        this.state.sort_order == 1\n         ? { color: \"blue\" }\n         : {}\n       }></i>{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"start_date_timestamp\";\n        this.state.sort_order = -1;\n        this.getAllChallenges();\n       }}\n       className=\"ni ni-bold-down\"\n       style={\n        this.state.sort_by == \"start_date_timestamp\" &&\n        this.state.sort_order == -1\n         ? { color: \"blue\" }\n         : {}\n       }></i>\n     </th>\n     <th scope=\"col\">\n      End Date{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"end_date_timestamp\";\n        this.state.sort_order = 1;\n        this.getAllChallenges();\n       }}\n       className={\"ni ni-bold-up \"}\n       style={\n        this.state.sort_by == \"end_date_timestamp\" && this.state.sort_order == 1\n         ? { color: \"blue\" }\n         : {}\n       }></i>{\" \"}\n      <i\n       onClick={(e) => {\n        this.state.sort_by = \"end_date_timestamp\";\n        this.state.sort_order = -1;\n        this.getAllChallenges();\n       }}\n       className=\"ni ni-bold-down\"\n       style={\n        this.state.sort_by == \"end_date_timestamp\" &&\n        this.state.sort_order == -1\n         ? { color: \"blue\" }\n         : {}\n       }></i>\n     </th>\n     <th scope=\"col\">Type</th>\n     <th scope=\"col\">Details</th>\n     <th scope=\"col\">Links</th>\n     <th scope=\"col\">Actions</th>\n    </tr>\n   </thead>\n  );\n }\n\n changePagination() {}\n\n getPagination() {\n  let number_of_pages = this.state.number_of_pages;\n  let pagiantionItems = [];\n  for (let index = 1; index <= number_of_pages; index++) {\n   pagiantionItems.push(\n    <PaginationItem\n     key={index + new Date().valueOf()}\n     className={this.state.page == index ? \"active\" : \"\"}>\n     <PaginationLink\n      onClick={(e) => {\n       // this.setState({page:index});\n       this.state.page = index;\n       this.getAllChallenges();\n      }}>\n      {index}\n     </PaginationLink>\n    </PaginationItem>\n   );\n  }\n\n  return (\n   <Pagination\n    className=\"pagination justify-content-end mb-0\"\n    listClassName=\"justify-content-end mb-0\">\n    {pagiantionItems}\n   </Pagination>\n  );\n }\n\n deleteChallenge(e, id) {\n  var isConfimed = window.confirm(\n   \"Are you sure want to delete this challenge ?\"\n  );\n  if (isConfimed) {\n   deleteChallengeRequest(id)\n    .then((response) => {\n     if (response.code == 200) {\n      this.props.alert.success(response.msg);\n     } else {\n      this.props.alert.success(response.msg);\n     }\n     this.getAllChallenges();\n    })\n    .catch((e) => {\n     this.props.alert.error(e);\n     // this.props.alert.error(e)\n    });\n  }\n }\n\n getTableRows() {\n  let challenge_rows = [];\n  let challenges = this.state.challenges_listing || [];\n  for (let index = 0; index < challenges.length; index++) {\n   let data = challenges[index];\n   let link = \"/viewchallenge/\" + data._id;\n   let leader_redirection_link = \"/leaderboard/\" + data._id;\n   let entries_redirection_link = \"/entries/\" + data._id;\n   let challenge_type = \"live\";\n   if (data.is_submitted_live && data.is_challenge_completed) {\n    challenge_type = \"past\";\n   } else if (!data.is_submitted_live && data.is_challenge_completed) {\n    challenge_type = \"completed\";\n   }\n\n   let row = (\n    <tr>\n     <td style={{ textAlign: \"center\" }}>{data.number}</td>\n     <td>{data.name}</td>\n     <td style={{ textAlign: \"center\" }}>\n      {data.all_entries && data.all_entries.length > 0\n       ? data.all_entries.length\n       : 0}\n     </td>\n     <td>\n      {new Date(data.start_date_timestamp).toLocaleString(undefined, {\n       timeZone: \"Asia/Kolkata\",\n      })}\n     </td>\n     <td>\n      {new Date(data.end_date_timestamp).toLocaleString(undefined, {\n       timeZone: \"Asia/Kolkata\",\n      })}\n     </td>\n     <td>\n      <Badge color=\"\" className=\"badge-dot\">\n       {challenge_type == \"live\" ? (\n        <i className=\"bg-success\" />\n       ) : challenge_type == \"completed\" ? (\n        <i className=\"bg-info\" />\n       ) : (\n        <i className=\"bg-danger\" />\n       )}\n       {challenge_type}\n      </Badge>\n     </td>\n     <td>\n      {\n       <Link className=\"\" to={link}>\n        Details\n       </Link>\n      }\n     </td>\n     {challenge_type != \"past\" && (\n      <td>\n       <Link className=\"\" to={entries_redirection_link}>\n        Entries\n       </Link>\n      </td>\n     )}\n     {challenge_type == \"past\" && (\n      <td>\n       <Link className=\"\" to={leader_redirection_link}>\n        Leaderboard\n       </Link>\n      </td>\n     )}\n     {/* <td>{\n          <Link\n            className=\"\"\n            to='#'\n          >\n            Leaderboard\n            </Link>\n        }</td> */}\n     <td className=\"text-right\">\n      <UncontrolledDropdown>\n       <DropdownToggle\n        className=\"btn-icon-only text-light\"\n        role=\"button\"\n        size=\"sm\"\n        color=\"\"\n        onClick={(e) => e.preventDefault()}>\n        <i className=\"fas fa-ellipsis-v\" />\n       </DropdownToggle>\n       <DropdownMenu className=\"dropdown-menu-arrow\" right>\n        <DropdownItem onClick={(e) => this.deleteChallenge(e, data._id)}>\n         Delete\n        </DropdownItem>\n       </DropdownMenu>\n      </UncontrolledDropdown>\n     </td>\n    </tr>\n   );\n   challenge_rows.push(row);\n  }\n\n  return challenge_rows;\n }\n render() {\n  return (\n   <>\n    <Header />\n    {/* Page content */}\n    <Container className=\"mt--7\" fluid>\n     {/* Table */}\n     <Row>\n      <div className=\"col\">\n       <Card className=\"shadow\">\n        <CardHeader className=\"border-0\">\n         <Row>\n          <Col md=\"6\">\n           <h3 className=\"mb-0\">All Challenges</h3>\n          </Col>\n          <Col md=\"6\">\n           <Input\n            placeholder=\"Search\"\n            value={this.state.search_key}\n            onChange={(e) => {\n             this.state.search_key = e.target.value;\n             this.state.page = 1;\n             this.getAllChallenges();\n            }}\n            type=\"text\"\n           />\n          </Col>\n         </Row>\n         {true && (\n          <Row>\n           <Col md=\"6\">\n            <UncontrolledDropdown nav>\n             <DropdownToggle className=\"nav-link-icon\">\n              Filter : {this.state.filter_type}\n             </DropdownToggle>\n             <DropdownMenu\n              aria-labelledby=\"navbar-default_dropdown_1\"\n              className=\"dropdown-menu-arrow\"\n              left>\n              <DropdownItem\n               onClick={(e) => {\n                this.state.filter_type = \"live\";\n                this.getAllChallenges();\n               }}>\n               Live\n              </DropdownItem>\n              <DropdownItem\n               onClick={(e) => {\n                this.state.filter_type = \"past\";\n                this.getAllChallenges();\n               }}>\n               Past\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem\n               onClick={(e) => {\n                this.state.filter_type = \"completed\";\n                this.getAllChallenges();\n               }}>\n               Completed\n              </DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem\n               onClick={(e) => {\n                this.state.filter_type = \"all\";\n                this.getAllChallenges();\n               }}>\n               All\n              </DropdownItem>\n             </DropdownMenu>\n            </UncontrolledDropdown>\n           </Col>\n          </Row>\n         )}\n\n         {/* <Form className=\"navbar-search navbar-search-dark form-inline mr-3 d-none d-md-flex ml-lg-auto\">\n                    <FormGroup className=\"mb-0\">\n                      <InputGroup className=\"input-group-alternative\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"fas fa-search\" />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input placeholder=\"Search\" type=\"text\" />\n                      </InputGroup>\n                    </FormGroup>\n                  </Form> */}\n        </CardHeader>\n        <Table\n         className=\"align-items-center table-flush challenges_table\"\n         responsive>\n         {this.getTableHeadings()}\n         <tbody>{this.getTableRows()}</tbody>\n        </Table>\n        <CardFooter className=\"py-4\">\n         <nav aria-label=\"...\">{true && this.getPagination()}</nav>\n        </CardFooter>\n       </Card>\n      </div>\n     </Row>\n    </Container>\n   </>\n  );\n }\n}\n\n// export default AllChallenges;\nexport default withAlert()(AllChallenges);\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Entries.js",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { withAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getAllChallengesRequest, getChallengeEntriesRequest, submitToLiveRequest\n    , updateRankRequest, autoRankRequest, exportLeaderboard\n} from '../../api/ApiRequest';\nimport '../../assets/css/style.css'\n// reactstrap components\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    CardFooter,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Media,\n    Pagination,\n    PaginationItem,\n    PaginationLink,\n    Progress,\n    Table,\n    Container,\n    Row,\n    Col,\n    UncontrolledTooltip,\n    Form,\n    FormGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    Modal,\n    Button,\n    InputGroup,\n    Navbar,\n    Nav,\n    NavbarBrand,\n    Label\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Entries extends React.Component {\n\n    constructor(props) {\n        // \n        let current_marks = [];\n        let curret_selected_entry = {};\n        let current_selected_rank = 0;\n        let current_selected_remarks = '';\n        let rank_submit_error = '';\n        let challenge_name = '';\n        super(props);\n        this.state = {\n            number_of_pages: 1,\n            search_key: '',\n            page: 1,\n            limit: 10,\n            sort_by: 'created_timestamp',\n            sort_order: -1,\n            entries_listing: [],\n            filter_type: 'all',\n            challenge: undefined,\n            rankingModal: false,\n            isAllEntriesRanked: false\n        }\n        this.changePagination = this.changePagination.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.changeRankingData = this.changeRankingData.bind(this);\n    }\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        if (params && params.id) {\n            this.state.challenge_id = params.id\n            this.getEntries()\n        }\n        this.getEntries();\n    }\n\n    toggleModal = (state, index) => {\n\n        this.curret_selected_entry = {};\n        this.current_marks = [];\n        // this.current_selected_rank = 0;\n        this.current_selected_remarks = '';\n        this.rank_submit_error = '';\n\n\n        //init the current_marks array with size equal to that challenge categories\n        if (this.state.challenge)\n            this.current_marks = this.state.challenge.categories_listing;\n\n        //if admin is trying to re-evaluate someone's marks then fetch their existing marks here\n        if (index != undefined) {\n            if (this.state.entries_listing[index]['rank_details']) {\n                this.current_marks = this.state.entries_listing[index]['rank_details']['categories_marks'];\n                // this.current_selected_rank = this.state.entries_listing[index]['rank_details']['rank'];\n                this.current_selected_remarks = this.state.entries_listing[index]['rank_details']['remark_text'];;\n            }\n            if (this.state.entries_listing[index])\n                this.curret_selected_entry = this.state.entries_listing[index];\n        }\n        this.setState({\n            rankingModal: !this.state['rankingModal']\n        });\n    };\n\n    getEntries() {\n        getChallengeEntriesRequest({\n            number_of_pages: this.state.number_of_pages,\n            search_key: this.state.search_key,\n            page: this.state.page,\n            limit: this.state.limit,\n            sort_by: this.state.sort_by,\n            sort_order: this.state.sort_order,\n            filter_type: this.state.filter_type,\n            challenge_id: this.state.challenge_id\n        })\n            .then((response) => {\n\n                if (response.code == 200) {\n\n                    let data = response.data;\n                    let number_of_pages = Math.ceil(response.totalCount / response.limit);\n                    if (number_of_pages == 0)\n                        number_of_pages = 1;\n                    if (response.challenge_data.name)\n                        this.challenge_name = response.challenge_data.name || '';\n                    this.setState({ isAllEntriesRanked: response.isAllEntriesRanked || false, entries_listing: response.data, number_of_pages: number_of_pages, challenge: response.challenge_data })\n                } else {\n                    this.props.alert.success(response.msg)\n                }\n            })\n            .catch((e) => {\n\n                this.props.alert.error(e)\n            });\n    }\n\n    getTableHeadings() {\n\n        let dynamic_cat_headings = [];\n        if (this.state.challenge != {} && this.state.entries_listing.length > 0) {\n\n            for (let index = 0; index < this.state.challenge.categories_listing.length; index++) {\n                dynamic_cat_headings.push(<th scope=\"col\">{this.state.challenge.categories_listing[index]['title']}</th>)\n            }\n        }\n\n        return (\n            <thead className=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">Sr No.</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Submitted Date\n                        <i onClick={e => { this.state.sort_by = 'created_timestamp'; this.state.sort_order = 1; this.getEntries(); }} className={\"ni ni-bold-up \"} style={(this.state.sort_by == 'created_timestamp' && this.state.sort_order == 1 ? { color: \"blue\" } : {})} >\n                        </i> <i onClick={e => { this.state.sort_by = 'created_timestamp'; this.state.sort_order = -1; this.getEntries(); }} className=\"ni ni-bold-down\" style={(this.state.sort_by == 'created_timestamp' && this.state.sort_order == -1 ? { color: \"blue\" } : {})}></i>\n                    </th>\n                    <th scope=\"col\">PDF</th>\n                    <th scope=\"col\">Remark</th>\n                    {/* <th scope=\"col\">Challenge</th> */}\n                    <th scope=\"col\">Rank\n                        <i onClick={e => { this.state.sort_by = 'rank'; this.state.sort_order = 1; this.getEntries(); }} className={\"ni ni-bold-up \"} style={(this.state.sort_by == 'rank' && this.state.sort_order == 1 ? { color: \"blue\" } : {})} >\n                        </i> <i onClick={e => { this.state.sort_by = 'rank'; this.state.sort_order = -1; this.getEntries(); }} className=\"ni ni-bold-down\" style={(this.state.sort_by == 'rank' && this.state.sort_order == -1 ? { color: \"blue\" } : {})}></i>\n                    </th>\n                    <th scope=\"col\">Rank Status</th>\n                    <th scope=\"col\">Total Score</th>\n                    {/* Show this column and button only if challenge is not submitted to live */}\n                    {this.state.challenge && !this.state.challenge.is_submitted_live && <th scope=\"col\">Entries</th>}\n                    {dynamic_cat_headings}\n                </tr>\n            </thead>\n        );\n    }\n\n\n    changePagination() {\n\n    }\n\n    getPagination() {\n        let number_of_pages = this.state.number_of_pages;\n        let pagiantionItems = [];\n        for (let index = 1; index <= number_of_pages; index++) {\n            pagiantionItems.push(\n                <PaginationItem key={index + new Date().valueOf()} className={this.state.page == index ? \"active\" : ''}>\n                    <PaginationLink\n                        onClick={(e) => {\n                            this.state.page = index;\n                            this.getEntries();\n                        }}\n                    >\n                        {index}\n                    </PaginationLink>\n                </PaginationItem>\n            )\n        }\n\n        return (<Pagination\n            className=\"pagination justify-content-end mb-0\"\n            listClassName=\"justify-content-end mb-0\"\n        >\n            {pagiantionItems}\n        </Pagination>);\n    }\n\n    getTableRows() {\n        let challenge_rows = [];\n        let entries = this.state.entries_listing || [];\n\n\n        for (let index = 0; index < entries.length; index++) {\n\n            let data = entries[index];\n            let categories_data = [];\n            let total_score = 0;\n            if (data.rank_details)\n                for (let index2 = 0; index2 < data.rank_details.categories_marks.length; index2++) {\n                    total_score = total_score + data.rank_details.categories_marks[index2]['marks'];\n                    categories_data.push(<td style={{ textAlign: \"center\" }}>{data.rank_details.categories_marks[index2]['marks']}</td>)\n                }\n            else\n                for (let index2 = 0; index2 < this.state.challenge.categories_listing.length; index2++) {\n                    categories_data.push(<td></td>)\n                }\n\n            let link = data.entry_pdf;\n            let row = <tr>\n                <td style={{ textAlign: \"center\" }} >{index + 1}</td>\n                <td>{data.user_name}</td>\n                <td><div style={{ width: '200px' }}>{data.email || ''}</div></td>\n                <td>\n                    {new Date(data.created_timestamp).toISOString().slice(0, 10) + ' ' +\n                        new Date(data.created_timestamp).toISOString().slice(11, 16)}\n                </td>\n                <td>{\n                    <a\n                        className=\"\"\n                        href={link}\n                        target=\"_blank\"\n                    >\n                        PDF\n                    </a>\n                }</td>\n                <td><div className=\"scroll\" style={{ width: \"200px\", overflowX: \"scroll\" }}>\n                    <p>\n                        {data.remark_text}\n                    </p>\n                </div></td>\n                <td style={{ textAlign: \"center\" }}>{data.rank_details ? data.rank_details.rank : ''}</td>\n                <td>{data.rank_details ? 'YES' : 'NO'}</td>\n                <td style={{ textAlign: \"center\" }}>{total_score}</td>\n                {/* Show this button only if challenge is not submitted to live */}\n                {this.state.challenge && !this.state.challenge.is_submitted_live && <td><Button onClick={() => this.toggleModal(\"rankingModal\", index)}>{data.rank_details ? \"Re-evaluate\" : \"Evaluate\"}</Button></td>}\n                {categories_data}\n            </tr>;\n            challenge_rows.push(\n                row\n            )\n        }\n\n        return (challenge_rows)\n    }\n\n    // ranking data change handler\n    changeRankingData(type, event, index = undefined, maxmarks = 0) {\n        if (type == 'marks') {\n            if (!parseInt(event.target.value)) {\n                this.current_marks[index]['marks'] = 0;\n            }\n            else if (parseInt(event.target.value) <= maxmarks) {\n                this.current_marks[index]['marks'] = parseInt(event.target.value);\n            }\n        }\n        else if (type == 'rank')\n            this.current_selected_rank = parseInt(event.target.value);\n        else if (type == 'remarks')\n            this.current_selected_remarks = event.target.value;\n        this.forceUpdate();\n    }\n\n    submitDataHandler = event => {\n\n        event.preventDefault();\n        if (this.state.challenge._id) {\n            submitToLiveRequest({ challenge_id: this.state.challenge._id })\n                .then((response) => {\n\n                    if (response.code == 200) {\n                        this.props.alert.success(response.msg)\n                    } else {\n                        this.props.alert.success(response.msg)\n                    }\n                })\n                .catch((e) => {\n                    this.props.alert.error(e)\n                });\n        }\n\n    }\n\n    autoRankHandler = event => {\n\n        event.preventDefault();\n        if (this.state.challenge._id) {\n            autoRankRequest({ challenge_id: this.state.challenge._id })\n                .then((response) => {\n\n                    if (response.code == 200) {\n                        this.props.alert.success(response.msg)\n                        this.getEntries();\n                    } else {\n                        this.props.alert.success(response.msg)\n                    }\n                })\n                .catch((e) => {\n                    this.props.alert.error(e)\n                });\n        }\n\n    }\n\n    //saves ranking evaluation / reevaluation\n    submitRankingForStudent = event => {\n        if (this.state.challenge && this.curret_selected_entry) {\n            let marks = [];\n            for (let index = 0; index < this.current_marks.length; index++) {\n                marks.push({ marks: this.current_marks[index]['marks'] || 0 })\n            }\n            let rankobject = {\n                challenge_id: this.state.challenge._id,\n                entry_id: this.curret_selected_entry._id,\n                user_id: this.curret_selected_entry.user_id,\n                categories_marks: marks,\n                // rank: this.current_selected_rank,\n                remark_text: this.current_selected_remarks\n            }\n\n            this.updateRank(rankobject);\n\n        }\n\n    }\n\n\n    updateRank(data) {\n        updateRankRequest(data)\n            .then((response) => {\n\n                if (response.code == 200) {\n\n                    this.toggleModal(\"rankingModal\")\n                    this.props.alert.success(response.msg)\n                    this.getEntries();\n                } else {\n\n                    this.rank_submit_error = response.msg;\n                    this.props.alert.error(response.msg)\n                }\n            })\n            .catch((e) => {\n\n                this.rank_submit_error = e;\n                this.forceUpdate();\n                // this.props.alert.error(e)\n            });\n    }\n\n\n    //this provides the form for rank evaluation / reevaluation\n    getRankingDynamicCategoriesInputField() {\n        let rows = [];\n        if (this.state.challenge != {} && this.state.entries_listing.length > 0) {\n            for (let index = 0; index < this.state.challenge.categories_listing.length; index++) {\n                rows.push(\n                    <Row>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <label>{this.state.challenge.categories_listing[index]['title']}</label>\n                                <Input\n                                    placeholder=\"Marks\"\n                                    type=\"Number\"\n                                    min={0}\n                                    max={this.state.challenge.categories_listing[index]['out_of_score']}\n                                    fieldname={\"mark_\" + index}\n                                    onChange={e => { this.changeRankingData('marks', e, index, this.state.challenge.categories_listing[index]['out_of_score']) }}\n                                    value={this.current_marks && this.current_marks.length > 0 ? this.current_marks[index]['marks'] || 0 : 0}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <label>Out Of Marks</label>\n                                <Input\n                                    readOnly\n                                    placeholder=\"Marks\"\n                                    type=\"text\"\n                                    fieldname=\"out_of_marks\"\n                                    value={this.state.challenge.categories_listing[index]['out_of_score']}\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                )\n\n            }\n\n            rows.push(\n                <Row>\n                    {/* <Col md=\"6\">\n                        <FormGroup>\n                            <label>Rank</label>\n                            <Input\n                                placeholder=\"Marks\"\n                                type=\"number\"\n                                fieldname=\"rank\"\n                                min={0}\n                                max={5}\n                                value={this.current_selected_rank}\n                                onChange={e => { this.changeRankingData('rank', e) }}\n                            />\n                        </FormGroup>\n                    </Col> */}\n                    <Col md=\"6\">\n                        <FormGroup>\n                            <label>Remark</label>\n                            <Input\n                                placeholder=\"Remark\"\n                                type=\"text\"\n                                fieldname=\"out_of_marks\"\n                                value={this.current_selected_remarks}\n                                onChange={e => { this.changeRankingData('remarks', e) }}\n                            />\n                        </FormGroup>\n                    </Col>\n                </Row>\n            )\n        }\n\n\n        return rows;\n    }\n\n    clickExport = () => {\n        exportLeaderboard({ challenge_id: this.state.challenge._id, type : \"live\" })\n            .then((response) => {\n                if (response.code === 200) {\n                    if (response.data) {\n                        let a = document.createElement('a');\n                        a.href = response.data\n                        a.click();\n                        this.props.alert.success(\"SUCCESS\")\n                    } else {\n                        this.props.alert.success(\"NO_DATA_FOUND\")\n                    }\n                } else {\n                    this.props.alert.success(\"NO_DATA_FOUND\")\n                }\n            })\n            .catch((e) => {\n                console.log(\"response e\", e)\n            });\n    }\n\n\n    render() {\n        return (\n            <>\n                <Header />\n                {/* Page content */}\n                <Container className=\"mt--7\" fluid>\n                    {/* Table */}\n                    <Row>\n                        <div className=\"col\">\n                            <Card className=\"shadow\">\n                                <CardHeader className=\"border-0\">\n                                    <Row>\n                                        <Col md=\"6\">\n                                            <h3 className=\"mb-0\">Entries {this.challenge_name && \": \" + this.challenge_name} </h3>\n                                        </Col>\n                                        <Col md=\"6\">\n                                            <Input placeholder=\"Search\"\n                                                value={this.state.search_key}\n                                                onChange={e => { this.state.search_key = e.target.value; this.state.page = 1; this.getEntries(); }}\n                                                type=\"text\" />\n                                        </Col>\n                                    </Row>\n                                    {true && <Row>\n                                        <Col md=\"6\">\n                                            <UncontrolledDropdown nav>\n                                                <DropdownToggle className=\"nav-link-icon\">\n                                                    Filter : {this.state.filter_type}\n                                                </DropdownToggle>\n                                                <DropdownMenu\n                                                    aria-labelledby=\"navbar-default_dropdown_1\"\n                                                    className=\"dropdown-menu-arrow\"\n                                                    left\n                                                >\n                                                    <DropdownItem\n                                                        onClick={e => { this.state.filter_type = 'ranked'; this.getEntries(); }}\n                                                    >Ranked</DropdownItem>\n                                                    <DropdownItem\n                                                        onClick={e => { this.state.filter_type = 'unranked'; this.getEntries(); }}\n                                                    >Unranked</DropdownItem>\n                                                    <DropdownItem divider />\n                                                    <DropdownItem\n                                                        onClick={e => { this.state.filter_type = 'all'; this.getEntries(); }}\n                                                    >All</DropdownItem>\n                                                </DropdownMenu>\n                                            </UncontrolledDropdown>\n                                        </Col>\n\n\n                                    </Row>}\n                                </CardHeader>\n                                <Table className=\"align-items-center table-flush challenges_table\" responsive>\n                                    {this.getTableHeadings()}\n                                    <tbody>\n                                        {this.getTableRows()}\n                                    </tbody>\n                                </Table>\n                                <CardFooter className=\"py-4\">\n                                    {/* Show Submit to live button only if challenge is not submitted to live */}\n                                    {/* disable this button if All entries are not ranked under a challenge */}\n                                    {this.state.challenge && !this.state.challenge.is_submitted_live && <Button disabled={!this.state.isAllEntriesRanked} onClick={this.submitDataHandler} color=\"primary\" type=\"button\">\n                                        Submit to live\n                                    </Button>}\n                                    {this.state.challenge && !this.state.challenge.is_submitted_live && <Button disabled={!this.state.isAllEntriesRanked} onClick={this.autoRankHandler} color=\"primary\" type=\"button\">\n                                        Arrange Rank\n                                    </Button>\n                                    }\n                                    <Button onClick={this.clickExport} color=\"primary\" type=\"button\">\n                                        Export\n                                    </Button>\n                                    <nav aria-label=\"...\">\n                                        {\n                                            true &&\n                                            this.getPagination()\n                                        }\n\n                                    </nav>\n\n                                </CardFooter>\n                            </Card>\n                        </div>\n                    </Row>\n                    <Modal\n                        className=\"modal-dialog-centered modal-lg\"\n                        isOpen={this.state.rankingModal}\n                        toggle={() => this.toggleModal(\"rankingModal\")}\n                    >\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                                Ranking\n                            </h5>\n                            <button\n                                aria-label=\"Close\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={() => this.toggleModal(\"rankingModal\")}\n                            >\n                                <span aria-hidden={true}>×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            {this.getRankingDynamicCategoriesInputField()}\n                            <Row>\n                                <Col style={{ textAlign: \"center\" }} md=\"12\">\n                                    <Label style={{ color: \"red\" }}>\n                                        {this.rank_submit_error}\n                                    </Label>\n                                </Col>\n                            </Row>\n\n                        </div>\n                        <div className=\"modal-footer\">\n\n                            <Button\n                                color=\"secondary\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={() => this.toggleModal(\"rankingModal\")}\n                            >\n                                Close\n                            </Button>\n                            <Button onClick={this.submitRankingForStudent} color=\"primary\" type=\"button\">\n                                Save changes\n                            </Button>\n                        </div>\n                    </Modal>\n                </Container>\n            </>\n        );\n    }\n}\n\n\n// export default Entries;\nexport default withAlert()(Entries)","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Changepassword.js",["309","310","311","312","313","314"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from 'react';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { login } from '../AuthRequests';\nimport { changePassword } from '../AuthRequests';\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { globalStrings } from '../../utils/strings';\n\nconst ChangePassword = () => {\n  const history = useHistory();\n  const alert = useAlert();\n\n  const [email, setEmail] = useState();\n  const [oldPassword, setOldPassword] = useState();\n  const [newPassword, setNewPassword] = useState();\n  const changePasswordButtonHandler = () => {\n    changePassword(email, oldPassword , newPassword)\n      .then((response) => {\n        \n        alert.success(globalStrings.request_success);\n        history.push(\"/auth/login\");\n      })\n      .catch((e) => {\n        \n        if (e == \"INVALID_CREDENTIALS\") {\n          alert.error(globalStrings.invalid_ced);\n        } else {\n          alert.error(e);\n        }\n      });\n  }\n\n  const handleEnterPress = (e) => {\n    if (e.key === 'Enter') {\n      changePasswordButtonHandler();\n    }\n  }\n  const handleEmailInput = (event) => {\n    setEmail(event.target.value.replace(/\\s/g, \"\"));\n  }\n\n  const handleNewPasswordInput = (event) => {\n    setNewPassword(event.target.value.replace(/\\s/g, \"\"));\n  }\n  const handleOldPasswordInput = (event) => {\n    setOldPassword(event.target.value.replace(/\\s/g, \"\"));\n  }\n\n  const signupButtonHandler = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/register\");\n  }\n\n  const handleForgetPassword = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/forget\");\n  }\n\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small>Sign in with credentials</small>\n            </div>\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                    required\n                    value={email || ''}\n                    onChange={handleEmailInput}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Old Password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={oldPassword || ''}\n                    onChange={handleOldPasswordInput}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"New Password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={newPassword || ''}\n                    onChange={handleNewPasswordInput}\n                    onKeyDown={handleEnterPress}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className=\"text-center\">\n                <Button onClick={changePasswordButtonHandler} className=\"my-4\" color=\"primary\" type=\"button\">\n                  Change password\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default ChangePassword;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Forgetpassword.js",["315","316"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from 'react';\nimport { forgotPassword } from '../AuthRequests';\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { globalStrings } from '../../utils/strings';\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n\n\nconst ForgetPassword = () => {\n\n  const history = useHistory();\n  const alert = useAlert();\n\n  const [email, setFEmail] = useState();\n\n  const formButtonHandler = () => {\n    \n    forgotPassword(email)\n      .then((response) => {\n        \n        alert.success(globalStrings.check_email);\n      })\n      .catch((e) => {\n        \n        alert.error(e);\n      });\n  }\n\n  const handleLoginRedirect = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/login\");\n  }\n\n  // const handleEmailEnter = (e) => {\n  //   e.preventDefault();\n  //   // history.push(\"/auth/register\");\n  // }\n\n  const handleEmailInput = (event) => {\n    setFEmail(event.target.value.replace(/\\s/g, \"\"));\n  }\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small>Reset password</small>\n            </div>\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                    value={email || ''}\n                    onChange={handleEmailInput}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className=\"text-center\">\n                <Button onClick={formButtonHandler}  className=\"my-4\" color=\"primary\" type=\"button\">\n                  Reset password\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"6\">\n            <a\n              className=\"text-light\"\n              onClick={handleLoginRedirect}\n              // to=\"/auth/forget\"\n              // onClick={(e) => e.preventDefault()}\n            >\n              <small>Sign In</small>\n            </a>\n          </Col>\n          {/* <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              onClick={signupButtonHandler}\n              // onClick={(e) => e.preventDefault()}\n            >\n              <small>Create new account</small>\n            </a>\n          </Col> */}\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default ForgetPassword;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Login.js",["317","318","319","320"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from 'react';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { login } from '../AuthRequests';\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { globalStrings } from '../../utils/strings';\n\nconst Login = () => {\n  const history = useHistory();\n  const alert = useAlert();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const loginButtonHandler = () => {\n    \n    \n    \n    login(email, password)\n      .then((response) => {\n        \n        alert.success(globalStrings.login_success);\n        localStorage.setItem(\"PMALoginTime\", Date.now());\n        localStorage.setItem(\"PMAuserId\", response['data']['_id']);\n        localStorage.setItem(\"PMAtoken\", response['data']['token']);\n        history.push(\"/admin/dashboard\");\n      })\n      .catch((e) => {\n        \n        if (e == \"INVALID_CREDENTIALS\") {\n          alert.error(globalStrings.invalid_ced);\n        } else {\n          alert.error(e);\n        }\n      });\n  }\n\n  const signupButtonHandler = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/register\");\n  }\n\n  const handleEnterPress = (e) => {\n    if (e.key === 'Enter') {\n      loginButtonHandler();\n    }\n  }\n  const handleEmailInput = (event) => {\n    setEmail(event.target.value.replace(/\\s/g, \"\"));\n  }\n\n  const handlePasswordInput = (event) => {\n    setPassword(event.target.value.replace(/\\s/g, \"\"));\n  }\n\n\n\n  const handleForgetPassword = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/forget\");\n  }\n\n  return (\n    <>\n      <Col lg=\"5\" md=\"7\">\n        <Card className=\"bg-secondary shadow border-0\">\n\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small>Sign in with credentials</small>\n            </div>\n            <Form role=\"form\">\n              <FormGroup className=\"mb-3\">\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                    required\n                    value={email || ''}\n                    onChange={handleEmailInput}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    required\n                    value={password || ''}\n                    onChange={handlePasswordInput}\n                    onKeyDown={handleEnterPress}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {/* <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                <input\n                  className=\"custom-control-input\"\n                  id=\" customCheckLogin\"\n                  type=\"checkbox\"\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\" customCheckLogin\"\n                >\n                  <span className=\"text-muted\">Remember me</span>\n                </label>\n              </div> */}\n              <div className=\"text-center\">\n                <Button onClick={loginButtonHandler} className=\"my-4\" color=\"primary\" type=\"button\">\n                  Sign in\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n        <Row className=\"mt-3\">\n          <Col xs=\"6\">\n            <a\n              className=\"text-light\"\n              onClick={handleForgetPassword}\n              // to=\"/auth/forget\"\n              // onClick={(e) => e.preventDefault()}\n            >\n              <small>Forgot password?</small>\n            </a>\n          </Col>\n          {/* <Col className=\"text-right\" xs=\"6\">\n            <a\n              className=\"text-light\"\n              onClick={signupButtonHandler}\n              // onClick={(e) => e.preventDefault()}\n            >\n              <small>Create new account</small>\n            </a>\n          </Col> */}\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default Login;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Register.js",["321","322","323","324"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from 'react';\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { signup } from '../AuthRequests';\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { globalStrings } from '../../utils/strings';\n\n\nconst Register = () => {\n\n  const history = useHistory();\n  const alert = useAlert();\n\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [password, setPassword] = useState();\n  const loginButtonHandler = () => {\n    console.log('here it is');\n    console.log('email: ', email);\n    console.log('password: ', password);\n    signup(email, password , name , password)\n      .then((response) => {\n        console.log(\"login sucess\", response);\n        alert.success(globalStrings.signup_success);\n        // localStorage.setItem(\"PMALoginTime\", Date.now());\n        // localStorage.setItem(\"PMAuserId\", response['data']['_id']);\n        // localStorage.setItem(\"PMAtoken\", response['data']['token']);\n        history.push(\"/admin/index\");\n        // history.push(\"/auth/login\");\n      })\n      .catch((e) => {\n          alert.error(e);\n      });\n  }\n\n  const handleEnterPress = (e) => {\n    if (e.key === 'Enter') {\n      loginButtonHandler();\n    }\n  }\n  const handleEmailInput = (event) => {\n    setEmail(event.target.value.replace(/\\s/g, \"\"));\n  }\n\n  const handlePasswordInput = (event) => {\n    setPassword(event.target.value.replace(/\\s/g, \"\"));\n  }\n\n  const handleNameInput = (event) => {\n    setName(event.target.value.replace(/\\s/g, \"\"));\n  }\n  const signupButtonHandler = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/register\");\n  }\n\n  const handleForgetPassword = (e) => {\n    e.preventDefault();\n    history.push(\"/auth/forget\");\n  }\n\n  return (\n    <>\n      <Col lg=\"6\" md=\"8\">\n        <Card className=\"bg-secondary shadow border-0\">\n          <CardBody className=\"px-lg-5 py-lg-5\">\n            <div className=\"text-center text-muted mb-4\">\n              <small>Sign up with credentials</small>\n            </div>\n            <Form role=\"form\">\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative mb-3\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-hat-3\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input placeholder=\"Name\" \n                    type=\"text\" \n                    value={name || ''}\n                    onChange={handleNameInput}/>\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative mb-3\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-email-83\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    autoComplete=\"new-email\"\n                    value={email || ''}\n                    onChange={handleEmailInput}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup className=\"input-group-alternative\">\n                  <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                      <i className=\"ni ni-lock-circle-open\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password || ''}\n                    onChange={handlePasswordInput}\n                    onKeyDown={handleEnterPress}\n                  />\n                </InputGroup>\n              </FormGroup>\n              {/* <div className=\"text-muted font-italic\">\n                <small>\n                  password strength:{\" \"}\n                  <span className=\"text-success font-weight-700\">strong</span>\n                </small>\n              </div> */}\n              {/* <Row className=\"my-4\">\n                <Col xs=\"12\">\n                  <div className=\"custom-control custom-control-alternative custom-checkbox\">\n                    <input\n                      className=\"custom-control-input\"\n                      id=\"customCheckRegister\"\n                      type=\"checkbox\"\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor=\"customCheckRegister\"\n                    >\n                      <span className=\"text-muted\">\n                        I agree with the{\" \"}\n                        <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                          Privacy Policy\n                        </a>\n                      </span>\n                    </label>\n                  </div>\n                </Col>\n              </Row> */}\n              <div className=\"text-center\">\n                <Button onClick={loginButtonHandler} className=\"mt-4\" color=\"primary\" type=\"button\">\n                  Create account\n                </Button>\n              </div>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n};\n\nexport default Register;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Leaderboard.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { withAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getAllChallengesRequest, getChallengeEntriesRequest,\n    getLeaderboardRequest\n    , updateLeaderBoard,\n    exportLeaderboard\n} from '../../api/ApiRequest';\nimport '../../assets/css/style.css'\n// reactstrap components\nimport {\n    Badge,\n    Card,\n    CardHeader,\n    CardFooter,\n    DropdownMenu,\n    DropdownItem,\n    UncontrolledDropdown,\n    DropdownToggle,\n    Media,\n    Pagination,\n    PaginationItem,\n    PaginationLink,\n    Progress,\n    Table,\n    Container,\n    Row,\n    Col,\n    UncontrolledTooltip,\n    Form,\n    FormGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Input,\n    Modal,\n    Button,\n    InputGroup,\n    Navbar,\n    Nav,\n    NavbarBrand,\n    Label\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nclass Leaderboard extends React.Component {\n\n    constructor(props) {\n        // \n        let current_marks = [];\n        let curret_selected_entry = {};\n        let current_selected_rank = 0;\n        let current_selected_remarks = '';\n        let rank_submit_error = '';\n        let challenge_name = '';\n        super(props);\n        this.state = {\n            number_of_pages: 1,\n            search_key: '',\n            page: 1,\n            limit: 10,\n            sort_by: 'created_timestamp',\n            sort_order: -1,\n            entries_listing: [],\n            filter_type: 'all',\n            challenge: undefined,\n            leaderBoardModel: false,\n            isAllEntriesRanked: false\n        }\n        this.changePagination = this.changePagination.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.changeRankingData = this.changeRankingData.bind(this);\n    }\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        if (params && params.id) {\n            this.state.challenge_id = params.id\n            this.getEntries()\n        }\n        this.getEntries();\n    }\n\n    toggleModal = (state, index) => {\n\n        this.curret_selected_entry = {};\n        // this.current_selected_rank = 0;\n        this.current_selected_remarks = '';\n        this.rank_submit_error = '';\n\n\n        //init the current_marks array with size equal to that challenge categories\n        if (this.state.challenge)\n            this.current_marks = this.state.challenge.categories_listing;\n\n        //if admin is trying to re-evaluate someone's marks then fetch their existing marks here\n        if (index != undefined) {\n            if (this.state.entries_listing[index]['rank_details']) {\n                this.current_marks = this.state.entries_listing[index]['rank_details']['categories_marks'];\n                // this.current_selected_rank = this.state.entries_listing[index]['rank_details']['rank'];\n                this.current_selected_remarks = this.state.entries_listing[index]['remark_text'];\n            }\n            if (this.state.entries_listing[index])\n                this.curret_selected_entry = this.state.entries_listing[index];\n        }\n        this.setState({\n            leaderBoardModel: !this.state['leaderBoardModel']\n        });\n    };\n\n    getEntries() {\n        getLeaderboardRequest(this.state)\n            .then((response) => {\n                console.log('response: ', response);\n                if (response.code == 200) {\n                    let data = response.data;\n                    console.log('data: ', data);\n                    if (response.challenge_data.name)\n                        this.challenge_name = response.challenge_data.name || '';\n                    this.setState({ entries_listing: data, challenge: response.challenge_data })\n                } else {\n                    this.props.alert.success(response.msg)\n                }\n            })\n            .catch((e) => {\n\n                this.props.alert.error(e)\n            });\n    }\n\n    getTableHeadings() {\n\n        let dynamic_cat_headings = [];\n        if (this.state.challenge != {} && this.state.entries_listing.length > 0) {\n\n            for (let index = 0; index < this.state.challenge.categories_listing.length; index++) {\n                dynamic_cat_headings.push(<th scope=\"col\">{this.state.challenge.categories_listing[index]['title']}</th>)\n            }\n        }\n\n        return (\n            <thead className=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">Sr No.</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Submitted Date\n                    </th>\n                    <th scope=\"col\">PDF</th>\n                    <th scope=\"col\">Remark</th>\n                    {/* <th scope=\"col\">Challenge</th> */}\n                    <th scope=\"col\">Rank\n                    </th>\n                    {/* <th scope=\"col\">Rank Status</th> */}\n                    <th scope=\"col\">Total Score</th>\n                    <th scope=\"col\">Details</th>\n                    <th scope=\"col\">Edit</th>\n                    {/* {dynamic_cat_headings} */}\n                    {/* <th scope=\"col\">Details</th>\n                    <th scope=\"col\">Links</th> */}\n                </tr>\n            </thead>\n        );\n    }\n\n\n    changePagination() {\n\n    }\n\n    getPagination() {\n        let number_of_pages = this.state.number_of_pages;\n        let pagiantionItems = [];\n        for (let index = 1; index <= number_of_pages; index++) {\n            pagiantionItems.push(\n                <PaginationItem key={index + new Date().valueOf()} className={this.state.page == index ? \"active\" : ''}>\n                    <PaginationLink\n                        onClick={(e) => {\n                            // this.setState({page:index}); \n                            this.state.page = index;\n                            this.getEntries();\n                        }}\n                    >\n                        {index}\n                    </PaginationLink>\n                </PaginationItem>\n            )\n        }\n\n        return (<Pagination\n            className=\"pagination justify-content-end mb-0\"\n            listClassName=\"justify-content-end mb-0\"\n        >\n            {pagiantionItems}\n        </Pagination>);\n    }\n\n    getTableRows() {\n        let challenge_rows = [];\n        let entries = this.state.entries_listing || [];\n\n\n        for (let index = 0; index < entries.length; index++) {\n\n            let data = entries[index];\n            let categories_data = [];\n            let total_score = 0;\n            if (data.rank_details)\n                for (let index2 = 0; index2 < data.rank_details.categories_marks.length; index2++) {\n                    total_score = total_score + data.rank_details.categories_marks[index2]['marks'];\n                    categories_data.push(<td style={{ textAlign: \"center\" }}>{data.rank_details.categories_marks[index2]['marks']}</td>)\n                }\n            else\n                for (let index2 = 0; index2 < this.state.challenge.categories_listing.length; index2++) {\n                    categories_data.push(<td></td>)\n                }\n\n            let link = data.entry_pdf;\n            let detailsLink = \"/viewchallenge/\" + this.state.challenge._id;\n            let row = <tr>\n                <td style={{ textAlign: \"center\" }} >{index + 1}</td>\n                <td>{data.user_name}</td>\n                <td><div style={{ width: '200px' }}>{data.email || ''}</div></td>\n                <td>\n                    {new Date(data.created_timestamp).toISOString().slice(0, 10) + ' ' +\n                        new Date(data.created_timestamp).toISOString().slice(11, 16)}\n                </td>\n                <td>{\n                    <a\n                        className=\"\"\n                        href={link}\n                        target=\"_blank\"\n                    >\n                        PDF\n                    </a>\n                }</td>\n                <td>{data.remark_text}</td>\n                {/* <td>{data.challenge_id}</td> */}\n                <td style={{ textAlign: \"center\" }}>{data.rank_details ? data.rank_details.rank : ''}</td>\n                {/* <td>{data.rank_details ? 'YES' : 'NO'}</td> */}\n                <td style={{ textAlign: \"center\" }}>{total_score}</td>\n                <td style={{ textAlign: \"center\" }}>\n                    <Link\n                        className=\"\"\n                        to={detailsLink}\n                    >\n                        Details\n                    </Link>\n                </td>\n                <td style={{ textAlign: \"center\" }}>\n                    <Button onClick={() => this.toggleModal(\"leaderBoardModel\", index)}>Edit</Button>\n                </td>\n                {/* <td><Button onClick={() => this.toggleModal(\"leaderBoardModel\", index)}>{data.rank_details ? \"Re-evaluate\" : \"Evaluate\"}</Button></td> */}\n                {/* {categories_data} */}\n\n                {/* <td>\n                    <Badge color=\"\" className=\"badge-dot\">\n                        {(data.challenge_type == 'past' ? <i className=\"bg-warning\" /> : <i className=\"bg-success\" />)}\n                        {data.challenge_type || 'Live'}\n                    </Badge>\n                </td> */}\n                {/* <td>{\n                    <Link\n                        className=\"\"\n                        to={link}\n                    >\n                        Details\n                    </Link>\n                }</td>\n                <td>{\n                    <Link\n                        className=\"\"\n                        to='#'\n                    >\n                        {(data.challenge_type == 'past' ? 'Leaderboard' : 'Leaderboard')}\n                    </Link>\n                }</td> */}\n                {/* <td>{\n          <Link\n            className=\"\"\n            to='#'\n          >\n            Leaderboard\n            </Link>\n        }</td> */}\n            </tr>;\n            challenge_rows.push(\n                row\n            )\n        }\n\n        return (challenge_rows)\n    }\n\n    // ranking data change handler\n    changeRankingData(type, event, index = undefined, maxmarks = 0) {\n        if (type == 'marks') {\n            if (!parseInt(event.target.value)) {\n                this.current_marks[index]['marks'] = 0;\n            }\n            else if (parseInt(event.target.value) <= maxmarks) {\n                this.current_marks[index]['marks'] = parseInt(event.target.value);\n            }\n        }\n        else if (type == 'rank')\n            this.current_selected_rank = parseInt(event.target.value);\n        else if (type == 'remarks')\n            this.current_selected_remarks = event.target.value;\n        this.forceUpdate();\n    }\n\n    submitDataHandler = event => {\n\n        event.preventDefault();\n    }\n\n    clickExport = () => {\n        exportLeaderboard({ challenge_id: this.state.challenge._id })\n            .then((response) => {\n                if (response.code === 200) {\n                    if (response.data) {\n                        let a = document.createElement('a');\n                        a.href = response.data\n                        a.click();\n                        this.props.alert.success(\"SUCCESS\")\n                    } else {\n                        this.props.alert.success(\"NO_DATA_FOUND\")\n                    }\n                } else {\n                    this.props.alert.success(\"NO_DATA_FOUND\")\n                }\n            })\n            .catch((e) => {\n                console.log(\"response e\", e)\n            });\n    }\n\n    //saves ranking evaluation / reevaluation\n    submitRankingForStudent = event => {\n        if (this.curret_selected_entry) {\n            let marks = [];\n            for (let index = 0; index < this.current_marks.length; index++) {\n                marks.push({ marks: this.current_marks[index]['marks'] || 0 })\n            }\n            let rankobject = {\n                challenge_id: this.state.challenge._id,\n                entry_id: this.curret_selected_entry._id,\n                user_id: this.curret_selected_entry.user_id,\n                categories_marks: marks,\n                // rank: this.current_selected_rank,\n                remark_text: this.current_selected_remarks\n            }\n\n            this.leaderBoardUpdate(rankobject);\n\n        }\n\n    }\n\n\n    leaderBoardUpdate(data) {\n        updateLeaderBoard(data)\n            .then((response) => {\n\n                if (response.code == 200) {\n\n                    this.toggleModal(\"leaderBoardModel\")\n                    this.props.alert.success(response.msg)\n                    this.getEntries();\n                } else {\n\n                    this.rank_submit_error = response.msg;\n                    this.props.alert.error(response.msg)\n                }\n            })\n            .catch((e) => {\n\n                this.rank_submit_error = e;\n                this.forceUpdate();\n                // this.props.alert.error(e)\n            });\n    }\n\n\n    //this provides the form for rank evaluation / reevaluation\n    getRankingDynamicCategoriesInputField() {\n        let rows = [];\n        if (this.state.challenge != {} && this.state.entries_listing.length > 0) {\n\n            for (let index = 0; index < this.state.challenge.categories_listing.length; index++) {\n                rows.push(\n                    <Row>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <label>{this.state.challenge.categories_listing[index]['title']}</label>\n                                <Input\n                                    placeholder=\"Marks\"\n                                    type=\"Number\"\n                                    min={0}\n                                    max={this.state.challenge.categories_listing[index]['out_of_score']}\n                                    fieldname={\"mark_\" + index}\n                                    onChange={e => { this.changeRankingData('marks', e, index, this.state.challenge.categories_listing[index]['out_of_score']) }}\n                                    value={this.current_marks && this.current_marks.length > 0 ? this.current_marks[index]['marks'] || 0 : 0}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <label>Out Of Marks</label>\n                                <Input\n                                    readOnly\n                                    placeholder=\"Marks\"\n                                    type=\"text\"\n                                    fieldname=\"out_of_marks\"\n                                    value={this.state.challenge.categories_listing[index]['out_of_score']}\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                )\n\n            }\n\n            rows.push(\n                <Row>\n                    {/* <Col md=\"6\">\n                        <FormGroup>\n                            <label>Rank</label>\n                            <Input\n                                placeholder=\"Marks\"\n                                type=\"number\"\n                                fieldname=\"rank\"\n                                min={0}\n                                max={5}\n                                value={this.current_selected_rank}\n                                onChange={e => { this.changeRankingData('rank', e) }}\n                            />\n                        </FormGroup>\n                    </Col> */}\n                    <Col md=\"6\">\n                        <FormGroup>\n                            <label>Remark</label>\n                            <Input\n                                placeholder=\"Remark\"\n                                type=\"text\"\n                                fieldname=\"out_of_marks\"\n                                value={this.current_selected_remarks}\n                                onChange={e => { this.changeRankingData('remarks', e) }}\n                            />\n                        </FormGroup>\n                    </Col>\n                </Row>\n            )\n        }\n\n\n        return rows;\n    }\n\n\n    render() {\n        return (\n            <>\n                <Header />\n                {/* Page content */}\n                <Container className=\"mt--7\" fluid>\n                    {/* Table */}\n                    <Row>\n                        <div className=\"col\">\n                            <Card className=\"shadow\">\n                                <CardHeader className=\"border-0\">\n                                    <Row>\n                                        <Col md=\"6\">\n                                            <h3 className=\"mb-0\">Leaderboard {this.challenge_name && \": \" + this.challenge_name} </h3>\n                                        </Col>\n                                        {/* <Col md=\"6\">\n                                            <Input placeholder=\"Search\"\n                                                value={this.state.search_key}\n                                                onChange={e => { this.state.search_key = e.target.value; this.getEntries(); }}\n                                                type=\"text\" />\n                                        </Col> */}\n                                    </Row>\n                                    {false && <Row>\n                                        <Col md=\"6\">\n                                            <UncontrolledDropdown nav>\n                                                <DropdownToggle className=\"nav-link-icon\">\n                                                    Filter : {this.state.filter_type}\n                                                </DropdownToggle>\n                                                <DropdownMenu\n                                                    aria-labelledby=\"navbar-default_dropdown_1\"\n                                                    className=\"dropdown-menu-arrow\"\n                                                    left\n                                                >\n                                                    <DropdownItem\n                                                        onClick={e => { this.state.filter_type = 'ranked'; this.getEntries(); }}\n                                                    >Ranked</DropdownItem>\n                                                    <DropdownItem\n                                                        onClick={e => { this.state.filter_type = 'unranked'; this.getEntries(); }}\n                                                    >Unranked</DropdownItem>\n                                                    <DropdownItem divider />\n                                                    <DropdownItem\n                                                        onClick={e => { this.state.filter_type = 'all'; this.getEntries(); }}\n                                                    >All</DropdownItem>\n                                                </DropdownMenu>\n                                            </UncontrolledDropdown>\n                                        </Col>\n\n\n                                    </Row>}\n                                </CardHeader>\n                                <Table className=\"align-items-center table-flush challenges_table\" responsive>\n                                    {this.getTableHeadings()}\n                                    <tbody>\n                                        {this.getTableRows()}\n                                    </tbody>\n                                </Table>\n                                <CardFooter className=\"py-4\">\n                                    {false && <Button disabled={!this.state.isAllEntriesRanked} onClick={this.submitDataHandler} color=\"primary\" type=\"button\">\n                                        Submit to live\n                                    </Button>}\n\n                                    <Button onClick={this.clickExport} color=\"primary\" type=\"button\">\n                                        Export Leaderboard\n                                    </Button>\n                                    <nav aria-label=\"...\">\n                                        {\n                                            false &&\n                                            this.getPagination()\n                                        }\n\n                                    </nav>\n\n                                </CardFooter>\n                            </Card>\n                        </div>\n                    </Row>\n                    <Modal\n                        className=\"modal-dialog-centered modal-lg\"\n                        isOpen={this.state.leaderBoardModel}\n                        toggle={() => this.toggleModal(\"leaderBoardModel\")}\n                    >\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                                Update LeaderBoard\n                            </h5>\n                            <button\n                                aria-label=\"Close\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={() => this.toggleModal(\"leaderBoardModel\")}\n                            >\n                                <span aria-hidden={true}>×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            {/* <Form onSubmit={this.submitDataHandler}> */}\n                            {this.getRankingDynamicCategoriesInputField()}\n                            {/* </Form> */}\n                            <Row>\n                                <Col style={{ textAlign: \"center\" }} md=\"12\">\n                                    <Label style={{ color: \"red\" }}>\n                                        {this.rank_submit_error}\n                                    </Label>\n                                </Col>\n                            </Row>\n\n                        </div>\n                        <div className=\"modal-footer\">\n\n                            <Button\n                                color=\"secondary\"\n                                data-dismiss=\"modal\"\n                                type=\"button\"\n                                onClick={() => this.toggleModal(\"leaderBoardModel\")}\n                            >\n                                Close\n                            </Button>\n                            <Button onClick={this.submitRankingForStudent} color=\"primary\" type=\"button\">\n                                Save changes\n                            </Button>\n                        </div>\n                    </Modal>\n                </Container>\n            </>\n        );\n    }\n}\n\n\n// export default Leaderboard;\nexport default withAlert()(Leaderboard)","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\Tables.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\pages\\PmRun.js",["359"],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\utils\\strings.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Headers\\Header.js",["360","361","362","363","364"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport { Card, CardBody, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n        <Container fluid>\n          <div className=\"header-body\">\n            {/* Card stats */}\n            {/* <Row>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Traffic\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">\n                          350,897\n                        </span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-danger text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-bar\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fa fa-arrow-up\" /> 3.48%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          New users\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">2,356</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-warning text-white rounded-circle shadow\">\n                          <i className=\"fas fa-chart-pie\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-danger mr-2\">\n                        <i className=\"fas fa-arrow-down\" /> 3.48%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last week</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Sales\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">924</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-yellow text-white rounded-circle shadow\">\n                          <i className=\"fas fa-users\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-warning mr-2\">\n                        <i className=\"fas fa-arrow-down\" /> 1.10%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since yesterday</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col lg=\"6\" xl=\"3\">\n                <Card className=\"card-stats mb-4 mb-xl-0\">\n                  <CardBody>\n                    <Row>\n                      <div className=\"col\">\n                        <CardTitle\n                          tag=\"h5\"\n                          className=\"text-uppercase text-muted mb-0\"\n                        >\n                          Performance\n                        </CardTitle>\n                        <span className=\"h2 font-weight-bold mb-0\">49,65%</span>\n                      </div>\n                      <Col className=\"col-auto\">\n                        <div className=\"icon icon-shape bg-info text-white rounded-circle shadow\">\n                          <i className=\"fas fa-percent\" />\n                        </div>\n                      </Col>\n                    </Row>\n                    <p className=\"mt-3 mb-0 text-muted text-sm\">\n                      <span className=\"text-success mr-2\">\n                        <i className=\"fas fa-arrow-up\" /> 12%\n                      </span>{\" \"}\n                      <span className=\"text-nowrap\">Since last month</span>\n                    </p>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row> */}\n          </div>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\views\\AuthRequests.js",["365","366","367","368"],"import {\n    signupRequest,\n    loginRequest,\n    forgotPasswordRequest,\n    changePasswordRequest\n} from '../api/ApiRequest';\nimport {\n    validateEmail,\n    isEmptyField,\n    validatePassword\n} from '../utils/validator';\nimport { globalStrings } from '../utils/strings';\n\nexport function signup(email, password, name, confirmPassword) {\n    return new Promise((resolve, reject) => {\n        if (isEmptyField(name)) {\n            reject(globalStrings.user_name_empty);\n        } else if (!validateEmail(email)) {\n            reject(globalStrings.invalid_email);\n        } else if (password.length < 8) {\n            reject(globalStrings.invalid_length_password);\n        } else if (isEmptyField(password)) {\n            reject(globalStrings.password_empty);\n        } else if (!validatePassword(password)) {\n            reject(globalStrings.invalid_password);\n        } else if (isEmptyField(confirmPassword)) {\n            reject(globalStrings.invalid_confirm_password);\n        } else if (password.trim() !== confirmPassword.trim()) {\n            reject(globalStrings.password_not_mached);\n        } else {\n            //call goes here\n            signupRequest(email, password, name)\n                .then((response) => {\n                    resolve(response);\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        }\n    });\n}\n\nexport function login(email, password, device_os, device_os_version, device_token, device_name) {\n    return new Promise((resolve, reject) => {\n        if (!validateEmail(email)) {\n            reject(globalStrings.invalid_email);\n        } else if (isEmptyField(password)) {\n            reject(globalStrings.password_empty);\n        } else {\n            loginRequest(email, password, device_os, device_os_version, device_token, device_name)\n                .then((response) => {\n                    if (response.code == 200) {\n                        resolve(response);\n                    } else {\n                        reject(response)\n                    }\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        }\n    });\n}\n\nexport function changePassword(email, oldpassword, newpassword ) {\n    return new Promise((resolve, reject) => {\n        if (!validateEmail(email)) {\n            reject(globalStrings.invalid_email);\n        } else if (isEmptyField(oldpassword)) {\n            reject(globalStrings.password_empty);\n        } else if (isEmptyField(newpassword)) {\n            reject(globalStrings.password_empty);\n        } else if (newpassword == oldpassword) {\n            reject(globalStrings.password_cant_be_same);\n        } else {\n            changePasswordRequest(email, oldpassword, newpassword)\n                .then((response) => {\n                    if (response.code == 200) {\n                        resolve(response);\n                    } else {\n                        reject(response)\n                    }\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        }\n    });\n}\n\n\nexport function forgotPassword(email) {\n    return new Promise((resolve, reject) => {\n        if (!validateEmail(email)) {\n            reject(globalStrings.invalid_email);\n        } else {\n            forgotPasswordRequest(email)\n                .then((response) => {\n                    if (response.code == 200) {\n                        resolve(response);\n                    } else {\n                        reject(response)\n                    }\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        }\n    });\n}\n\n","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\variables\\charts.js",[],"D:\\Client\\Karan\\PMSchool_admin_panel\\src\\utils\\validator.js",["369","370"],"let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst passwordReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,}$/;\n\nexport const isEmptyField = (value) => !value || value.trim().length < 1;\n\nexport const validateEmail = (email) => {\n    if (isEmptyField(email)) return false;\n    return reg.test(email.trim());\n};\n\nexport const validatePassword = (password) => {\n    if (password.length < 8) return false;\n    return passwordReg.test(password.trim());\n};","D:\\Client\\Karan\\PMSchool_admin_panel\\src\\components\\Question\\index.js",["371"],{"ruleId":"372","severity":1,"message":"373","line":31,"column":8,"nodeType":"374","messageId":"375","endLine":31,"endColumn":22},{"ruleId":"372","severity":1,"message":"376","line":32,"column":8,"nodeType":"374","messageId":"375","endLine":32,"endColumn":20},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":19,"column":17,"nodeType":"383","messageId":"384","endLine":19,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":19,"column":30,"nodeType":"383","messageId":"384","endLine":19,"endColumn":32},{"ruleId":"381","severity":1,"message":"382","line":19,"column":54,"nodeType":"383","messageId":"384","endLine":19,"endColumn":56},{"ruleId":"381","severity":1,"message":"382","line":19,"column":70,"nodeType":"383","messageId":"384","endLine":19,"endColumn":72},{"ruleId":"372","severity":1,"message":"385","line":19,"column":23,"nodeType":"374","messageId":"375","endLine":19,"endColumn":28},{"ruleId":"386","severity":1,"message":"387","line":70,"column":19,"nodeType":"388","endLine":70,"endColumn":46},{"ruleId":"372","severity":1,"message":"389","line":13,"column":7,"nodeType":"374","messageId":"375","endLine":13,"endColumn":13},{"ruleId":"381","severity":1,"message":"390","line":132,"column":26,"nodeType":"383","messageId":"384","endLine":132,"endColumn":28},{"ruleId":"381","severity":1,"message":"390","line":137,"column":26,"nodeType":"383","messageId":"384","endLine":137,"endColumn":28},{"ruleId":"381","severity":1,"message":"390","line":142,"column":26,"nodeType":"383","messageId":"384","endLine":142,"endColumn":28},{"ruleId":"381","severity":1,"message":"390","line":147,"column":26,"nodeType":"383","messageId":"384","endLine":147,"endColumn":28},{"ruleId":"381","severity":1,"message":"390","line":152,"column":26,"nodeType":"383","messageId":"384","endLine":152,"endColumn":28},{"ruleId":"381","severity":1,"message":"390","line":157,"column":26,"nodeType":"383","messageId":"384","endLine":157,"endColumn":28},{"ruleId":"381","severity":1,"message":"390","line":162,"column":26,"nodeType":"383","messageId":"384","endLine":162,"endColumn":28},{"ruleId":"391","severity":1,"message":"392","line":210,"column":3,"nodeType":"393","messageId":"394","endLine":210,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":219,"column":23,"nodeType":"383","messageId":"384","endLine":219,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":220,"column":23,"nodeType":"383","messageId":"384","endLine":220,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":285,"column":23,"nodeType":"383","messageId":"384","endLine":285,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":286,"column":23,"nodeType":"383","messageId":"384","endLine":286,"endColumn":25},{"ruleId":"381","severity":1,"message":"390","line":296,"column":24,"nodeType":"383","messageId":"384","endLine":296,"endColumn":26},{"ruleId":"381","severity":1,"message":"390","line":297,"column":24,"nodeType":"383","messageId":"384","endLine":297,"endColumn":26},{"ruleId":"372","severity":1,"message":"395","line":417,"column":8,"nodeType":"374","messageId":"375","endLine":417,"endColumn":16},{"ruleId":"396","severity":1,"message":"397","line":565,"column":13,"nodeType":"388","endLine":565,"endColumn":79},{"ruleId":"396","severity":1,"message":"397","line":597,"column":13,"nodeType":"388","endLine":597,"endColumn":78},{"ruleId":"381","severity":1,"message":"382","line":81,"column":47,"nodeType":"383","messageId":"384","endLine":81,"endColumn":49},{"ruleId":"381","severity":1,"message":"390","line":82,"column":27,"nodeType":"383","messageId":"384","endLine":82,"endColumn":29},{"ruleId":"381","severity":1,"message":"382","line":87,"column":44,"nodeType":"383","messageId":"384","endLine":87,"endColumn":46},{"ruleId":"372","severity":1,"message":"398","line":130,"column":7,"nodeType":"374","messageId":"375","endLine":130,"endColumn":23},{"ruleId":"372","severity":1,"message":"399","line":151,"column":7,"nodeType":"374","messageId":"375","endLine":151,"endColumn":14},{"ruleId":"372","severity":1,"message":"400","line":26,"column":3,"nodeType":"374","messageId":"375","endLine":26,"endColumn":7},{"ruleId":"372","severity":1,"message":"401","line":27,"column":3,"nodeType":"374","messageId":"375","endLine":27,"endColumn":12},{"ruleId":"372","severity":1,"message":"402","line":28,"column":3,"nodeType":"374","messageId":"375","endLine":28,"endColumn":18},{"ruleId":"372","severity":1,"message":"403","line":29,"column":3,"nodeType":"374","messageId":"375","endLine":29,"endColumn":17},{"ruleId":"372","severity":1,"message":"404","line":30,"column":3,"nodeType":"374","messageId":"375","endLine":30,"endColumn":8},{"ruleId":"372","severity":1,"message":"405","line":31,"column":3,"nodeType":"374","messageId":"375","endLine":31,"endColumn":13},{"ruleId":"372","severity":1,"message":"406","line":25,"column":3,"nodeType":"374","messageId":"375","endLine":25,"endColumn":10},{"ruleId":"372","severity":1,"message":"407","line":26,"column":3,"nodeType":"374","messageId":"375","endLine":26,"endColumn":10},{"ruleId":"372","severity":1,"message":"408","line":27,"column":3,"nodeType":"374","messageId":"375","endLine":27,"endColumn":6},{"ruleId":"372","severity":1,"message":"409","line":20,"column":8,"nodeType":"374","messageId":"375","endLine":20,"endColumn":18},{"ruleId":"372","severity":1,"message":"410","line":26,"column":10,"nodeType":"374","messageId":"375","endLine":26,"endColumn":14},{"ruleId":"372","severity":1,"message":"411","line":26,"column":16,"nodeType":"374","messageId":"375","endLine":26,"endColumn":19},{"ruleId":"372","severity":1,"message":"412","line":36,"column":3,"nodeType":"374","messageId":"375","endLine":36,"endColumn":7},{"ruleId":"372","severity":1,"message":"413","line":37,"column":3,"nodeType":"374","messageId":"375","endLine":37,"endColumn":13},{"ruleId":"372","severity":1,"message":"414","line":38,"column":3,"nodeType":"374","messageId":"375","endLine":38,"endColumn":11},{"ruleId":"372","severity":1,"message":"406","line":39,"column":3,"nodeType":"374","messageId":"375","endLine":39,"endColumn":10},{"ruleId":"372","severity":1,"message":"407","line":40,"column":3,"nodeType":"374","messageId":"375","endLine":40,"endColumn":10},{"ruleId":"372","severity":1,"message":"408","line":41,"column":3,"nodeType":"374","messageId":"375","endLine":41,"endColumn":6},{"ruleId":"372","severity":1,"message":"415","line":42,"column":3,"nodeType":"374","messageId":"375","endLine":42,"endColumn":11},{"ruleId":"372","severity":1,"message":"416","line":43,"column":3,"nodeType":"374","messageId":"375","endLine":43,"endColumn":8},{"ruleId":"372","severity":1,"message":"417","line":44,"column":3,"nodeType":"374","messageId":"375","endLine":44,"endColumn":12},{"ruleId":"372","severity":1,"message":"418","line":54,"column":3,"nodeType":"374","messageId":"375","endLine":54,"endColumn":16},{"ruleId":"372","severity":1,"message":"419","line":55,"column":3,"nodeType":"374","messageId":"375","endLine":55,"endColumn":16},{"ruleId":"372","severity":1,"message":"420","line":59,"column":10,"nodeType":"374","messageId":"375","endLine":59,"endColumn":37},{"ruleId":"372","severity":1,"message":"421","line":62,"column":9,"nodeType":"374","messageId":"375","endLine":62,"endColumn":19},{"ruleId":"372","severity":1,"message":"422","line":63,"column":10,"nodeType":"374","messageId":"375","endLine":63,"endColumn":19},{"ruleId":"372","severity":1,"message":"423","line":64,"column":10,"nodeType":"374","messageId":"375","endLine":64,"endColumn":27},{"ruleId":"372","severity":1,"message":"424","line":67,"column":10,"nodeType":"374","messageId":"375","endLine":67,"endColumn":18},{"ruleId":"372","severity":1,"message":"425","line":67,"column":20,"nodeType":"374","messageId":"375","endLine":67,"endColumn":31},{"ruleId":"372","severity":1,"message":"426","line":73,"column":9,"nodeType":"374","messageId":"375","endLine":73,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":81,"column":23,"nodeType":"383","messageId":"384","endLine":81,"endColumn":25},{"ruleId":"372","severity":1,"message":"427","line":82,"column":10,"nodeType":"374","messageId":"375","endLine":82,"endColumn":14},{"ruleId":"381","severity":1,"message":"390","line":84,"column":26,"nodeType":"383","messageId":"384","endLine":84,"endColumn":28},{"ruleId":"391","severity":1,"message":"392","line":106,"column":9,"nodeType":"393","messageId":"394","endLine":106,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":107,"column":9,"nodeType":"393","messageId":"394","endLine":107,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":112,"column":28,"nodeType":"383","messageId":"384","endLine":112,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":112,"column":65,"nodeType":"383","messageId":"384","endLine":112,"endColumn":67},{"ruleId":"391","severity":1,"message":"392","line":118,"column":9,"nodeType":"393","messageId":"394","endLine":118,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":119,"column":9,"nodeType":"393","messageId":"394","endLine":119,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":124,"column":28,"nodeType":"383","messageId":"384","endLine":124,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":124,"column":65,"nodeType":"383","messageId":"384","endLine":124,"endColumn":67},{"ruleId":"391","severity":1,"message":"392","line":133,"column":9,"nodeType":"393","messageId":"394","endLine":133,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":134,"column":9,"nodeType":"393","messageId":"394","endLine":134,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":139,"column":28,"nodeType":"383","messageId":"384","endLine":139,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":139,"column":63,"nodeType":"383","messageId":"384","endLine":139,"endColumn":65},{"ruleId":"391","severity":1,"message":"392","line":145,"column":9,"nodeType":"393","messageId":"394","endLine":145,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":146,"column":9,"nodeType":"393","messageId":"394","endLine":146,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":151,"column":28,"nodeType":"383","messageId":"384","endLine":151,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":151,"column":63,"nodeType":"383","messageId":"384","endLine":151,"endColumn":65},{"ruleId":"391","severity":1,"message":"392","line":161,"column":9,"nodeType":"393","messageId":"394","endLine":161,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":162,"column":9,"nodeType":"393","messageId":"394","endLine":162,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":167,"column":28,"nodeType":"383","messageId":"384","endLine":167,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":168,"column":31,"nodeType":"383","messageId":"384","endLine":168,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":174,"column":9,"nodeType":"393","messageId":"394","endLine":174,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":175,"column":9,"nodeType":"393","messageId":"394","endLine":175,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":180,"column":28,"nodeType":"383","messageId":"384","endLine":180,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":181,"column":31,"nodeType":"383","messageId":"384","endLine":181,"endColumn":33},{"ruleId":"391","severity":1,"message":"392","line":190,"column":9,"nodeType":"393","messageId":"394","endLine":190,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":191,"column":9,"nodeType":"393","messageId":"394","endLine":191,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":196,"column":28,"nodeType":"383","messageId":"384","endLine":196,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":196,"column":77,"nodeType":"383","messageId":"384","endLine":196,"endColumn":79},{"ruleId":"391","severity":1,"message":"392","line":202,"column":9,"nodeType":"393","messageId":"394","endLine":202,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":203,"column":9,"nodeType":"393","messageId":"394","endLine":203,"endColumn":19},{"ruleId":"381","severity":1,"message":"390","line":208,"column":28,"nodeType":"383","messageId":"384","endLine":208,"endColumn":30},{"ruleId":"381","severity":1,"message":"390","line":209,"column":31,"nodeType":"383","messageId":"384","endLine":209,"endColumn":33},{"ruleId":"381","severity":1,"message":"390","line":232,"column":33,"nodeType":"383","messageId":"384","endLine":232,"endColumn":35},{"ruleId":"391","severity":1,"message":"392","line":236,"column":8,"nodeType":"393","messageId":"394","endLine":236,"endColumn":18},{"ruleId":"381","severity":1,"message":"390","line":261,"column":24,"nodeType":"383","messageId":"384","endLine":261,"endColumn":26},{"ruleId":"381","severity":1,"message":"390","line":311,"column":24,"nodeType":"383","messageId":"384","endLine":311,"endColumn":26},{"ruleId":"381","severity":1,"message":"390","line":313,"column":27,"nodeType":"383","messageId":"384","endLine":313,"endColumn":29},{"ruleId":"381","severity":1,"message":"382","line":328,"column":22,"nodeType":"383","messageId":"384","endLine":328,"endColumn":24},{"ruleId":"381","severity":1,"message":"390","line":335,"column":22,"nodeType":"383","messageId":"384","endLine":335,"endColumn":24},{"ruleId":"391","severity":1,"message":"392","line":394,"column":14,"nodeType":"393","messageId":"394","endLine":394,"endColumn":24},{"ruleId":"391","severity":1,"message":"392","line":395,"column":14,"nodeType":"393","messageId":"394","endLine":395,"endColumn":24},{"ruleId":"391","severity":1,"message":"392","line":415,"column":17,"nodeType":"393","messageId":"394","endLine":415,"endColumn":27},{"ruleId":"391","severity":1,"message":"392","line":422,"column":17,"nodeType":"393","messageId":"394","endLine":422,"endColumn":27},{"ruleId":"391","severity":1,"message":"392","line":430,"column":17,"nodeType":"393","messageId":"394","endLine":430,"endColumn":27},{"ruleId":"391","severity":1,"message":"392","line":438,"column":17,"nodeType":"393","messageId":"394","endLine":438,"endColumn":27},{"ruleId":"372","severity":1,"message":"428","line":20,"column":10,"nodeType":"374","messageId":"375","endLine":20,"endColumn":14},{"ruleId":"372","severity":1,"message":"429","line":22,"column":5,"nodeType":"374","messageId":"375","endLine":22,"endColumn":28},{"ruleId":"372","severity":1,"message":"430","line":28,"column":5,"nodeType":"374","messageId":"375","endLine":28,"endColumn":10},{"ruleId":"372","severity":1,"message":"431","line":36,"column":5,"nodeType":"374","messageId":"375","endLine":36,"endColumn":10},{"ruleId":"372","severity":1,"message":"415","line":40,"column":5,"nodeType":"374","messageId":"375","endLine":40,"endColumn":13},{"ruleId":"372","severity":1,"message":"432","line":45,"column":5,"nodeType":"374","messageId":"375","endLine":45,"endColumn":24},{"ruleId":"372","severity":1,"message":"400","line":46,"column":5,"nodeType":"374","messageId":"375","endLine":46,"endColumn":9},{"ruleId":"372","severity":1,"message":"402","line":48,"column":5,"nodeType":"374","messageId":"375","endLine":48,"endColumn":20},{"ruleId":"372","severity":1,"message":"403","line":49,"column":5,"nodeType":"374","messageId":"375","endLine":49,"endColumn":19},{"ruleId":"372","severity":1,"message":"405","line":53,"column":5,"nodeType":"374","messageId":"375","endLine":53,"endColumn":15},{"ruleId":"372","severity":1,"message":"433","line":54,"column":5,"nodeType":"374","messageId":"375","endLine":54,"endColumn":11},{"ruleId":"372","severity":1,"message":"408","line":55,"column":5,"nodeType":"374","messageId":"375","endLine":55,"endColumn":8},{"ruleId":"372","severity":1,"message":"434","line":56,"column":5,"nodeType":"374","messageId":"375","endLine":56,"endColumn":16},{"ruleId":"372","severity":1,"message":"435","line":66,"column":13,"nodeType":"374","messageId":"375","endLine":66,"endColumn":26},{"ruleId":"372","severity":1,"message":"436","line":67,"column":13,"nodeType":"374","messageId":"375","endLine":67,"endColumn":34},{"ruleId":"372","severity":1,"message":"437","line":68,"column":13,"nodeType":"374","messageId":"375","endLine":68,"endColumn":34},{"ruleId":"372","severity":1,"message":"438","line":69,"column":13,"nodeType":"374","messageId":"375","endLine":69,"endColumn":37},{"ruleId":"372","severity":1,"message":"439","line":70,"column":13,"nodeType":"374","messageId":"375","endLine":70,"endColumn":30},{"ruleId":"372","severity":1,"message":"440","line":71,"column":13,"nodeType":"374","messageId":"375","endLine":71,"endColumn":27},{"ruleId":"391","severity":1,"message":"392","line":93,"column":13,"nodeType":"393","messageId":"394","endLine":93,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":113,"column":19,"nodeType":"383","messageId":"384","endLine":113,"endColumn":21},{"ruleId":"381","severity":1,"message":"390","line":140,"column":35,"nodeType":"383","messageId":"384","endLine":140,"endColumn":37},{"ruleId":"372","severity":1,"message":"427","line":142,"column":25,"nodeType":"374","messageId":"375","endLine":142,"endColumn":29},{"ruleId":"381","severity":1,"message":"390","line":144,"column":41,"nodeType":"383","messageId":"384","endLine":144,"endColumn":43},{"ruleId":"381","severity":1,"message":"382","line":162,"column":34,"nodeType":"383","messageId":"384","endLine":162,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":176,"column":44,"nodeType":"393","messageId":"394","endLine":176,"endColumn":54},{"ruleId":"391","severity":1,"message":"392","line":176,"column":86,"nodeType":"393","messageId":"394","endLine":176,"endColumn":96},{"ruleId":"381","severity":1,"message":"390","line":176,"column":191,"nodeType":"383","messageId":"384","endLine":176,"endColumn":193},{"ruleId":"381","severity":1,"message":"390","line":176,"column":239,"nodeType":"383","messageId":"384","endLine":176,"endColumn":241},{"ruleId":"391","severity":1,"message":"392","line":177,"column":49,"nodeType":"393","messageId":"394","endLine":177,"endColumn":59},{"ruleId":"391","severity":1,"message":"392","line":177,"column":91,"nodeType":"393","messageId":"394","endLine":177,"endColumn":101},{"ruleId":"381","severity":1,"message":"390","line":177,"column":196,"nodeType":"383","messageId":"384","endLine":177,"endColumn":198},{"ruleId":"381","severity":1,"message":"390","line":177,"column":244,"nodeType":"383","messageId":"384","endLine":177,"endColumn":246},{"ruleId":"391","severity":1,"message":"392","line":183,"column":44,"nodeType":"393","messageId":"394","endLine":183,"endColumn":54},{"ruleId":"391","severity":1,"message":"392","line":183,"column":73,"nodeType":"393","messageId":"394","endLine":183,"endColumn":83},{"ruleId":"381","severity":1,"message":"390","line":183,"column":178,"nodeType":"383","messageId":"384","endLine":183,"endColumn":180},{"ruleId":"381","severity":1,"message":"390","line":183,"column":213,"nodeType":"383","messageId":"384","endLine":183,"endColumn":215},{"ruleId":"391","severity":1,"message":"392","line":184,"column":49,"nodeType":"393","messageId":"394","endLine":184,"endColumn":59},{"ruleId":"391","severity":1,"message":"392","line":184,"column":78,"nodeType":"393","messageId":"394","endLine":184,"endColumn":88},{"ruleId":"381","severity":1,"message":"390","line":184,"column":183,"nodeType":"383","messageId":"384","endLine":184,"endColumn":185},{"ruleId":"381","severity":1,"message":"390","line":184,"column":218,"nodeType":"383","messageId":"384","endLine":184,"endColumn":220},{"ruleId":"381","severity":1,"message":"390","line":206,"column":95,"nodeType":"383","messageId":"384","endLine":206,"endColumn":97},{"ruleId":"391","severity":1,"message":"392","line":209,"column":29,"nodeType":"393","messageId":"394","endLine":209,"endColumn":39},{"ruleId":"441","severity":1,"message":"442","line":257,"column":21,"nodeType":"388","messageId":"443","endLine":261,"endColumn":22,"fix":"444"},{"ruleId":"381","severity":1,"message":"390","line":287,"column":18,"nodeType":"383","messageId":"384","endLine":287,"endColumn":20},{"ruleId":"381","severity":1,"message":"390","line":295,"column":23,"nodeType":"383","messageId":"384","endLine":295,"endColumn":25},{"ruleId":"381","severity":1,"message":"390","line":297,"column":23,"nodeType":"383","messageId":"384","endLine":297,"endColumn":25},{"ruleId":"381","severity":1,"message":"390","line":309,"column":39,"nodeType":"383","messageId":"384","endLine":309,"endColumn":41},{"ruleId":"381","severity":1,"message":"390","line":329,"column":39,"nodeType":"383","messageId":"384","endLine":329,"endColumn":41},{"ruleId":"381","severity":1,"message":"390","line":370,"column":35,"nodeType":"383","messageId":"384","endLine":370,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":393,"column":34,"nodeType":"383","messageId":"384","endLine":393,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":504,"column":66,"nodeType":"393","messageId":"394","endLine":504,"endColumn":76},{"ruleId":"391","severity":1,"message":"392","line":504,"column":106,"nodeType":"393","messageId":"394","endLine":504,"endColumn":116},{"ruleId":"391","severity":1,"message":"392","line":520,"column":73,"nodeType":"393","messageId":"394","endLine":520,"endColumn":83},{"ruleId":"391","severity":1,"message":"392","line":523,"column":73,"nodeType":"393","messageId":"394","endLine":523,"endColumn":83},{"ruleId":"391","severity":1,"message":"392","line":527,"column":73,"nodeType":"393","messageId":"394","endLine":527,"endColumn":83},{"ruleId":"372","severity":1,"message":"413","line":24,"column":3,"nodeType":"374","messageId":"375","endLine":24,"endColumn":13},{"ruleId":"372","severity":1,"message":"445","line":32,"column":3,"nodeType":"374","messageId":"375","endLine":32,"endColumn":6},{"ruleId":"372","severity":1,"message":"446","line":35,"column":10,"nodeType":"374","messageId":"375","endLine":35,"endColumn":15},{"ruleId":"381","severity":1,"message":"390","line":57,"column":15,"nodeType":"383","messageId":"384","endLine":57,"endColumn":17},{"ruleId":"372","severity":1,"message":"447","line":81,"column":9,"nodeType":"374","messageId":"375","endLine":81,"endColumn":28},{"ruleId":"372","severity":1,"message":"448","line":86,"column":9,"nodeType":"374","messageId":"375","endLine":86,"endColumn":29},{"ruleId":"372","severity":1,"message":"413","line":27,"column":3,"nodeType":"374","messageId":"375","endLine":27,"endColumn":13},{"ruleId":"449","severity":1,"message":"450","line":110,"column":13,"nodeType":"388","endLine":115,"endColumn":14},{"ruleId":"372","severity":1,"message":"413","line":24,"column":3,"nodeType":"374","messageId":"375","endLine":24,"endColumn":13},{"ruleId":"381","severity":1,"message":"390","line":61,"column":15,"nodeType":"383","messageId":"384","endLine":61,"endColumn":17},{"ruleId":"372","severity":1,"message":"447","line":69,"column":9,"nodeType":"374","messageId":"375","endLine":69,"endColumn":28},{"ruleId":"449","severity":1,"message":"450","line":162,"column":13,"nodeType":"388","endLine":167,"endColumn":14},{"ruleId":"372","severity":1,"message":"413","line":24,"column":3,"nodeType":"374","messageId":"375","endLine":24,"endColumn":13},{"ruleId":"372","severity":1,"message":"445","line":32,"column":3,"nodeType":"374","messageId":"375","endLine":32,"endColumn":6},{"ruleId":"372","severity":1,"message":"447","line":84,"column":9,"nodeType":"374","messageId":"375","endLine":84,"endColumn":28},{"ruleId":"372","severity":1,"message":"448","line":89,"column":9,"nodeType":"374","messageId":"375","endLine":89,"endColumn":29},{"ruleId":"372","severity":1,"message":"429","line":22,"column":5,"nodeType":"374","messageId":"375","endLine":22,"endColumn":28},{"ruleId":"372","severity":1,"message":"451","line":22,"column":30,"nodeType":"374","messageId":"375","endLine":22,"endColumn":56},{"ruleId":"372","severity":1,"message":"430","line":30,"column":5,"nodeType":"374","messageId":"375","endLine":30,"endColumn":10},{"ruleId":"372","severity":1,"message":"431","line":38,"column":5,"nodeType":"374","messageId":"375","endLine":38,"endColumn":10},{"ruleId":"372","severity":1,"message":"415","line":42,"column":5,"nodeType":"374","messageId":"375","endLine":42,"endColumn":13},{"ruleId":"372","severity":1,"message":"432","line":47,"column":5,"nodeType":"374","messageId":"375","endLine":47,"endColumn":24},{"ruleId":"372","severity":1,"message":"400","line":48,"column":5,"nodeType":"374","messageId":"375","endLine":48,"endColumn":9},{"ruleId":"372","severity":1,"message":"402","line":50,"column":5,"nodeType":"374","messageId":"375","endLine":50,"endColumn":20},{"ruleId":"372","severity":1,"message":"403","line":51,"column":5,"nodeType":"374","messageId":"375","endLine":51,"endColumn":19},{"ruleId":"372","severity":1,"message":"405","line":55,"column":5,"nodeType":"374","messageId":"375","endLine":55,"endColumn":15},{"ruleId":"372","severity":1,"message":"433","line":56,"column":5,"nodeType":"374","messageId":"375","endLine":56,"endColumn":11},{"ruleId":"372","severity":1,"message":"408","line":57,"column":5,"nodeType":"374","messageId":"375","endLine":57,"endColumn":8},{"ruleId":"372","severity":1,"message":"434","line":58,"column":5,"nodeType":"374","messageId":"375","endLine":58,"endColumn":16},{"ruleId":"372","severity":1,"message":"435","line":68,"column":13,"nodeType":"374","messageId":"375","endLine":68,"endColumn":26},{"ruleId":"372","severity":1,"message":"436","line":69,"column":13,"nodeType":"374","messageId":"375","endLine":69,"endColumn":34},{"ruleId":"372","severity":1,"message":"437","line":70,"column":13,"nodeType":"374","messageId":"375","endLine":70,"endColumn":34},{"ruleId":"372","severity":1,"message":"438","line":71,"column":13,"nodeType":"374","messageId":"375","endLine":71,"endColumn":37},{"ruleId":"372","severity":1,"message":"439","line":72,"column":13,"nodeType":"374","messageId":"375","endLine":72,"endColumn":30},{"ruleId":"372","severity":1,"message":"440","line":73,"column":13,"nodeType":"374","messageId":"375","endLine":73,"endColumn":27},{"ruleId":"391","severity":1,"message":"392","line":95,"column":13,"nodeType":"393","messageId":"394","endLine":95,"endColumn":23},{"ruleId":"381","severity":1,"message":"382","line":114,"column":19,"nodeType":"383","messageId":"384","endLine":114,"endColumn":21},{"ruleId":"381","severity":1,"message":"390","line":132,"column":35,"nodeType":"383","messageId":"384","endLine":132,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":151,"column":34,"nodeType":"383","messageId":"384","endLine":151,"endColumn":36},{"ruleId":"381","severity":1,"message":"390","line":193,"column":95,"nodeType":"383","messageId":"384","endLine":193,"endColumn":97},{"ruleId":"391","severity":1,"message":"392","line":197,"column":29,"nodeType":"393","messageId":"394","endLine":197,"endColumn":39},{"ruleId":"441","severity":1,"message":"442","line":246,"column":21,"nodeType":"388","messageId":"443","endLine":250,"endColumn":22,"fix":"452"},{"ruleId":"381","severity":1,"message":"390","line":314,"column":18,"nodeType":"383","messageId":"384","endLine":314,"endColumn":20},{"ruleId":"381","severity":1,"message":"390","line":322,"column":23,"nodeType":"383","messageId":"384","endLine":322,"endColumn":25},{"ruleId":"381","severity":1,"message":"390","line":324,"column":23,"nodeType":"383","messageId":"384","endLine":324,"endColumn":25},{"ruleId":"381","severity":1,"message":"390","line":382,"column":35,"nodeType":"383","messageId":"384","endLine":382,"endColumn":37},{"ruleId":"381","severity":1,"message":"382","line":405,"column":34,"nodeType":"383","messageId":"384","endLine":405,"endColumn":36},{"ruleId":"391","severity":1,"message":"392","line":512,"column":73,"nodeType":"393","messageId":"394","endLine":512,"endColumn":83},{"ruleId":"391","severity":1,"message":"392","line":515,"column":73,"nodeType":"393","messageId":"394","endLine":515,"endColumn":83},{"ruleId":"391","severity":1,"message":"392","line":519,"column":73,"nodeType":"393","messageId":"394","endLine":519,"endColumn":83},{"ruleId":"453","severity":1,"message":"454","line":61,"column":5,"nodeType":"455","endLine":61,"endColumn":17,"suggestions":"456"},{"ruleId":"372","severity":1,"message":"412","line":21,"column":10,"nodeType":"374","messageId":"375","endLine":21,"endColumn":14},{"ruleId":"372","severity":1,"message":"414","line":21,"column":16,"nodeType":"374","messageId":"375","endLine":21,"endColumn":24},{"ruleId":"372","severity":1,"message":"457","line":21,"column":26,"nodeType":"374","messageId":"375","endLine":21,"endColumn":35},{"ruleId":"372","severity":1,"message":"445","line":21,"column":48,"nodeType":"374","messageId":"375","endLine":21,"endColumn":51},{"ruleId":"372","severity":1,"message":"458","line":21,"column":53,"nodeType":"374","messageId":"375","endLine":21,"endColumn":56},{"ruleId":"381","severity":1,"message":"390","line":52,"column":39,"nodeType":"383","messageId":"384","endLine":52,"endColumn":41},{"ruleId":"381","severity":1,"message":"390","line":73,"column":32,"nodeType":"383","messageId":"384","endLine":73,"endColumn":34},{"ruleId":"381","severity":1,"message":"390","line":78,"column":39,"nodeType":"383","messageId":"384","endLine":78,"endColumn":41},{"ruleId":"381","severity":1,"message":"390","line":99,"column":39,"nodeType":"383","messageId":"384","endLine":99,"endColumn":41},{"ruleId":"459","severity":1,"message":"460","line":1,"column":18,"nodeType":"461","messageId":"462","endLine":1,"endColumn":19,"suggestions":"463"},{"ruleId":"459","severity":1,"message":"460","line":1,"column":34,"nodeType":"461","messageId":"462","endLine":1,"endColumn":35,"suggestions":"464"},{"ruleId":"453","severity":1,"message":"465","line":47,"column":5,"nodeType":"455","endLine":47,"endColumn":7,"suggestions":"466"},"no-unused-vars","'ProtectedRoute' is defined but never used.","Identifier","unusedVar","'AddChallenge' is defined but never used.","no-native-reassign",["467"],"no-negated-in-lhs",["468"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Route' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'config' is assigned a value but never used.","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'fileInfo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'postCallDownload' is assigned a value but never used.","'putCall' is assigned a value but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'classnames' is defined but never used.","'Line' is defined but never used.","'Bar' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'Progress' is defined but never used.","'Table' is defined but never used.","'Container' is defined but never used.","'chartExample1' is defined but never used.","'chartExample2' is defined but never used.","'setSyntheticLeadingComments' is defined but never used.","'reactAlert' is assigned a value but never used.","'activeNav' is assigned a value but never used.","'chartExample1Data' is assigned a value but never used.","'fileLink' is assigned a value but never used.","'setFileLink' is assigned a value but never used.","'toggleNavs' is assigned a value but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'getAllChallengesRequest' is defined but never used.","'Badge' is defined but never used.","'Media' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'current_marks' is assigned a value but never used.","'curret_selected_entry' is assigned a value but never used.","'current_selected_rank' is assigned a value but never used.","'current_selected_remarks' is assigned a value but never used.","'rank_submit_error' is assigned a value but never used.","'challenge_name' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"469","text":"470"},"'Row' is defined but never used.","'login' is defined but never used.","'signupButtonHandler' is assigned a value but never used.","'handleForgetPassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'getChallengeEntriesRequest' is defined but never used.",{"range":"471","text":"470"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runGetStatistics'. Either include it or remove the dependency array.","ArrayExpression",["472"],"'CardTitle' is defined but never used.","'Col' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["473","474"],["475","476"],"React Hook useEffect has a missing dependency: 'question._id'. Either include it or remove the dependency array.",["477"],"no-global-assign","no-unsafe-negation",[9978,9978]," rel=\"noreferrer\"",[8466,8466],{"desc":"478","fix":"479"},{"messageId":"480","fix":"481","desc":"482"},{"messageId":"483","fix":"484","desc":"485"},{"messageId":"480","fix":"486","desc":"482"},{"messageId":"483","fix":"487","desc":"485"},{"desc":"488","fix":"489"},"Update the dependencies array to be: [filterDate, runGetStatistics]",{"range":"490","text":"491"},"removeEscape",{"range":"492","text":"493"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"494","text":"495"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"496","text":"493"},{"range":"497","text":"495"},"Update the dependencies array to be: [question._id]",{"range":"498","text":"499"},[2044,2056],"[filterDate, runGetStatistics]",[17,18],"",[17,17],"\\",[33,34],[33,33],[1201,1203],"[question._id]"]